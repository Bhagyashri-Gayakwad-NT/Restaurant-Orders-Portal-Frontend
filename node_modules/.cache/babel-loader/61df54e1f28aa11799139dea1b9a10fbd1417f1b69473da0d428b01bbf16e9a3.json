{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import Navbar from './Navbar';\n\n// const ViewCart = () => {\n//   const { userId, restaurantId } = useParams();\n//   const [cartItems, setCartItems] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch cart items by userId and restaurantId\n//     fetch(`http://localhost:200/cart/user/${userId}/restaurant/${restaurantId}`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setCartItems(data);\n//         // Fetch images for each food item\n//         data.forEach(item => {\n//           fetch(`http://localhost:300/foodItems/${item.foodItemId}/image`)\n//             .then((response) => response.blob())\n//             .then((blob) => {\n//               const imageUrl = URL.createObjectURL(blob);\n//               setCartItems(prevItems =>\n//                 prevItems.map((prevItem) =>\n//                   prevItem.cartId === item.cartId ? { ...prevItem, imageUrl } : prevItem\n//                 )\n//               );\n//             });\n//         });\n//       })\n//       .catch((error) => console.error('Error fetching cart items:', error));\n//   }, [userId, restaurantId]);\n\n//   const handleQuantityChange = (cartId, quantityChange) => {\n//     fetch(`http://localhost:200/cart/update/${cartId}?quantityChange=${quantityChange}`, {\n//       method: 'PUT',\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log('Cart updated:', data);\n//         // Update cart item quantity locally\n//         setCartItems((prevItems) =>\n//           prevItems.map((item) =>\n//             item.cartId === cartId ? { ...item, quantity: item.quantity + quantityChange } : item\n//           )\n//         );\n//       })\n//       .catch((error) => console.error('Error updating cart quantity:', error));\n//   };\n\n//   return (\n//     <div className=\"view-cart\">\n//       <Navbar />\n//       <h2>Your Cart</h2>\n//       <ul>\n//         {cartItems.length > 0 ? (\n//           cartItems.map((item) => (\n//             <li key={item.cartId}>\n//               {item.imageUrl && <img src={item.imageUrl} alt={item.foodItemName} width=\"100\" />}\n//               <h4>{item.foodItemName}</h4>\n//               <p>Price: Rs. {item.price}</p>\n//               <p>Quantity: {item.quantity}</p>\n//               <button onClick={() => handleQuantityChange(item.cartId, -1)} disabled={item.quantity <= 1}>\n//                 -\n//               </button>\n//               <button onClick={() => handleQuantityChange(item.cartId, 1)}>+</button>\n//               <p>Total: Rs. {item.price * item.quantity}</p>\n//             </li>\n//           ))\n//         ) : (\n//           <p>Your cart is empty</p>\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ViewCart;","map":{"version":3,"names":[],"sources":["C:/Users/DELL/Desktop/ReactJs/restaurant-orders-portal-frontened/src/components/ViewCart.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import Navbar from './Navbar';\r\n\r\n// const ViewCart = () => {\r\n//   const { userId, restaurantId } = useParams();\r\n//   const [cartItems, setCartItems] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch cart items by userId and restaurantId\r\n//     fetch(`http://localhost:200/cart/user/${userId}/restaurant/${restaurantId}`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setCartItems(data);\r\n//         // Fetch images for each food item\r\n//         data.forEach(item => {\r\n//           fetch(`http://localhost:300/foodItems/${item.foodItemId}/image`)\r\n//             .then((response) => response.blob())\r\n//             .then((blob) => {\r\n//               const imageUrl = URL.createObjectURL(blob);\r\n//               setCartItems(prevItems =>\r\n//                 prevItems.map((prevItem) =>\r\n//                   prevItem.cartId === item.cartId ? { ...prevItem, imageUrl } : prevItem\r\n//                 )\r\n//               );\r\n//             });\r\n//         });\r\n//       })\r\n//       .catch((error) => console.error('Error fetching cart items:', error));\r\n//   }, [userId, restaurantId]);\r\n\r\n//   const handleQuantityChange = (cartId, quantityChange) => {\r\n//     fetch(`http://localhost:200/cart/update/${cartId}?quantityChange=${quantityChange}`, {\r\n//       method: 'PUT',\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         console.log('Cart updated:', data);\r\n//         // Update cart item quantity locally\r\n//         setCartItems((prevItems) =>\r\n//           prevItems.map((item) =>\r\n//             item.cartId === cartId ? { ...item, quantity: item.quantity + quantityChange } : item\r\n//           )\r\n//         );\r\n//       })\r\n//       .catch((error) => console.error('Error updating cart quantity:', error));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"view-cart\">\r\n//       <Navbar />\r\n//       <h2>Your Cart</h2>\r\n//       <ul>\r\n//         {cartItems.length > 0 ? (\r\n//           cartItems.map((item) => (\r\n//             <li key={item.cartId}>\r\n//               {item.imageUrl && <img src={item.imageUrl} alt={item.foodItemName} width=\"100\" />}\r\n//               <h4>{item.foodItemName}</h4>\r\n//               <p>Price: Rs. {item.price}</p>\r\n//               <p>Quantity: {item.quantity}</p>\r\n//               <button onClick={() => handleQuantityChange(item.cartId, -1)} disabled={item.quantity <= 1}>\r\n//                 -\r\n//               </button>\r\n//               <button onClick={() => handleQuantityChange(item.cartId, 1)}>+</button>\r\n//               <p>Total: Rs. {item.price * item.quantity}</p>\r\n//             </li>\r\n//           ))\r\n//         ) : (\r\n//           <p>Your cart is empty</p>\r\n//         )}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ViewCart;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
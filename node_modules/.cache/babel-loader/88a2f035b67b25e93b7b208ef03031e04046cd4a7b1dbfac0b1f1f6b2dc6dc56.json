{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactJs\\\\restaurant-orders-portal-frontened\\\\src\\\\components\\\\ContactUsForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './ContactUs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactUs = () => {\n  _s();\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState(null);\n  const [errors, setErrors] = useState({\n    subject: '',\n    message: ''\n  }); // New state for errors\n  const navigate = useNavigate();\n  const validateFields = () => {\n    let valid = true;\n    const newErrors = {\n      subject: '',\n      message: ''\n    };\n    if (!subject.trim()) {\n      newErrors.subject = 'Subject is required.';\n      valid = false;\n    } else if (subject.length < 1 || subject.length > 100) {\n      newErrors.subject = 'Subject must be between 1 and 100 characters.';\n      valid = false;\n    }\n    if (!message.trim()) {\n      newErrors.message = 'Text is required.';\n      valid = false;\n    } else if (message.length < 1 || message.length > 500) {\n      newErrors.message = 'Text must be between 1 and 500 characters.';\n      valid = false;\n    }\n    setErrors(newErrors);\n    return valid;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Resetting errors before validation\n    setErrors({\n      subject: '',\n      message: ''\n    });\n\n    // Validate fields before submission\n    if (!validateFields()) {\n      return; // Stop submission if validation fails\n    }\n    setIsSubmitting(true);\n    setSubmitStatus(null);\n\n    // Create JSON object instead of FormData\n    const data = {\n      subject: subject.trim(),\n      text: message.trim()\n    };\n    try {\n      const response = await axios.post('http://localhost:100/users/send', data, {\n        headers: {\n          'Content-Type': 'application/json' // Set content type to JSON\n        }\n      });\n      setSubmitStatus({\n        type: 'success',\n        message: 'Message sent successfully!'\n      });\n      setSubject('');\n      setMessage('');\n    } catch (error) {\n      // Handle error response\n      if (error.response) {\n        const {\n          message\n        } = error.response.data;\n        setSubmitStatus({\n          type: 'error',\n          message: message || 'Failed to send message. Please try again.'\n        });\n      } else {\n        setSubmitStatus({\n          type: 'error',\n          message: 'Failed to send message. Please try again.'\n        });\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-us-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-us-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contact Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"subject\",\n            children: [\"Subject \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"subject\",\n            value: subject,\n            onChange: e => setSubject(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errors.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 32\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"message\",\n            children: [\"Message \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"message\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            required: true,\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), errors.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errors.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 32\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Sending...' : 'Send Message'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), submitStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-message ${submitStatus.type}`,\n        children: submitStatus.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactUs, \"HOprGjo0im9APTQ6to7ywz/7mX0=\", false, function () {\n  return [useNavigate];\n});\n_c = ContactUs;\nexport default ContactUs;\nvar _c;\n$RefreshReg$(_c, \"ContactUs\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","ContactUs","_s","subject","setSubject","message","setMessage","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","errors","setErrors","navigate","validateFields","valid","newErrors","trim","length","handleSubmit","e","preventDefault","data","text","response","post","headers","type","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","style","color","id","value","onChange","target","required","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactJs/restaurant-orders-portal-frontened/src/components/ContactUsForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './ContactUs.css';\r\n\r\nconst ContactUs = () => {\r\n  const [subject, setSubject] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitStatus, setSubmitStatus] = useState(null);\r\n  const [errors, setErrors] = useState({ subject: '', message: '' }); // New state for errors\r\n  const navigate = useNavigate();\r\n\r\n  const validateFields = () => {\r\n    let valid = true;\r\n    const newErrors = { subject: '', message: '' };\r\n\r\n    if (!subject.trim()) {\r\n      newErrors.subject = 'Subject is required.';\r\n      valid = false;\r\n    } else if (subject.length < 1 || subject.length > 100) {\r\n      newErrors.subject = 'Subject must be between 1 and 100 characters.';\r\n      valid = false;\r\n    }\r\n\r\n    if (!message.trim()) {\r\n      newErrors.message = 'Text is required.';\r\n      valid = false;\r\n    } else if (message.length < 1 || message.length > 500) {\r\n      newErrors.message = 'Text must be between 1 and 500 characters.';\r\n      valid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return valid;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Resetting errors before validation\r\n    setErrors({ subject: '', message: '' });\r\n\r\n    // Validate fields before submission\r\n    if (!validateFields()) {\r\n      return; // Stop submission if validation fails\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setSubmitStatus(null);\r\n\r\n    // Create JSON object instead of FormData\r\n    const data = {\r\n      subject: subject.trim(),\r\n      text: message.trim(),\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:100/users/send', data, {\r\n        headers: {\r\n          'Content-Type': 'application/json', // Set content type to JSON\r\n        },\r\n      });\r\n      setSubmitStatus({ type: 'success', message: 'Message sent successfully!' });\r\n      setSubject('');\r\n      setMessage('');\r\n    } catch (error) {\r\n      // Handle error response\r\n      if (error.response) {\r\n        const { message } = error.response.data;\r\n        setSubmitStatus({ type: 'error', message: message || 'Failed to send message. Please try again.' });\r\n      } else {\r\n        setSubmitStatus({ type: 'error', message: 'Failed to send message. Please try again.' });\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-us-container\">\r\n      <div className=\"contact-us-form\">\r\n        <h2>Contact Us</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"subject\">Subject <span style={{ color: 'red' }}>*</span></label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"subject\"\r\n              value={subject}\r\n              onChange={(e) => setSubject(e.target.value)}\r\n              required\r\n            />\r\n            {errors.subject && <div className=\"error-message\">{errors.subject}</div>} {/* Error message */}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"message\">Message <span style={{ color: 'red' }}>*</span></label>\r\n            <textarea\r\n              id=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              required\r\n              rows=\"4\"\r\n            ></textarea>\r\n            {errors.message && <div className=\"error-message\">{errors.message}</div>} {/* Error message */}\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"submit-button\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Sending...' : 'Send Message'}\r\n          </button>\r\n        </form>\r\n        {submitStatus && (\r\n          <div className={`status-message ${submitStatus.type}`}>\r\n            {submitStatus.message}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
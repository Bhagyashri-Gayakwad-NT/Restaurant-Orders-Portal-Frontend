{"ast":null,"code":"\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './ViewFoodItem.css';\n\n// const ViewFoodItem = () => {\n//   const [restaurants, setRestaurants] = useState([]);\n//   const [categories, setCategories] = useState([]);\n//   const [foodItems, setFoodItems] = useState([]);\n//   const [selectedRestaurantId, setSelectedRestaurantId] = useState('');\n//   const [selectedCategoryId, setSelectedCategoryId] = useState('');\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   const [newFoodItem, setNewFoodItem] = useState({\n//     foodItemName: '',\n//     description: '',\n//     price: '',\n//     isAvailable: false,\n//   });\n\n//   const userId = localStorage.getItem('userId');\n\n//   // Fetch restaurants by userId\n//   useEffect(() => {\n//     if (userId) {\n//       setLoading(true);\n//       axios\n//         .get(`http://localhost:300/restaurant/restaurants/${userId}`)\n//         .then((response) => {\n//           setRestaurants(response.data);\n//           setLoading(false);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching restaurants!\", error);\n//           setError(\"Failed to load restaurants.\");\n//           setLoading(false);\n//         });\n//     }\n//   }, [userId]);\n\n//   // Fetch categories by restaurant ID\n//   useEffect(() => {\n//     if (selectedRestaurantId) {\n//       setLoading(true);\n//       axios\n//         .get(`http://localhost:300/categories/foodCategoryByRestaurantId/${selectedRestaurantId}`)\n//         .then((response) => {\n//           setCategories(response.data);\n//           setLoading(false);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching categories!\", error);\n//           setError(\"Failed to load categories.\");\n//           setLoading(false);\n//         });\n//     }\n//   }, [selectedRestaurantId]);\n\n//   // Fetch food items by category ID\n//   useEffect(() => {\n//     if (selectedCategoryId) {\n//       setLoading(true);\n//       axios\n//         .get(`http://localhost:300/foodItems/${selectedCategoryId}`)\n//         .then((response) => {\n//           setFoodItems(response.data);\n//           setLoading(false);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching food items!\", error);\n//           setError(\"Failed to load food items.\");\n//           setLoading(false);\n//         });\n//     }\n//   }, [selectedCategoryId]);\n\n//   // Handle input change for the new food item\n//   const handleFoodItemChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewFoodItem((prev) => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   // Submit new food item\n//   const handleAddFoodItem = (e) => {\n//     e.preventDefault();\n//     const foodItemData = {\n//       ...newFoodItem,\n//       categoryId: parseInt(selectedCategoryId),\n//       restaurantId: parseInt(selectedRestaurantId),\n//     };\n\n//     axios\n//       .post('http://localhost:300/foodItems/add', foodItemData)\n//       .then((response) => {\n//         setFoodItems([...foodItems, response.data]);\n//         // Reset the form after successful submission\n//         setNewFoodItem({\n//           foodItemName: '',\n//           description: '',\n//           price: '',\n//           isAvailable: false,\n//         });\n//         setError(null);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error adding food item!\", error);\n//         setError(\"Failed to add food item.\");\n//       });\n//   };\n\n//   return (\n//     <div className=\"view-food-item-container\">\n//       <h2>View and Add Food Items</h2>\n\n//       {loading && <p>Loading...</p>}\n//       {error && <div className=\"error-message\">{error}</div>}\n\n//       {/* Restaurant Dropdown */}\n//       <div className=\"dropdown\">\n//         <label htmlFor=\"restaurant\">Select Restaurant:</label>\n//         <select\n//           id=\"restaurant\"\n//           value={selectedRestaurantId}\n//           onChange={(e) => {\n//             setSelectedRestaurantId(e.target.value);\n//             setSelectedCategoryId(''); // Reset category when restaurant changes\n//             setCategories([]);\n//             setFoodItems([]);\n//           }}\n//         >\n//           <option value=\"\">-- Select Restaurant --</option>\n//           {restaurants.map((restaurant) => (\n//             <option key={restaurant.id} value={restaurant.id}>\n//               {restaurant.restaurantName}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n\n//       {/* Category Dropdown */}\n//       {selectedRestaurantId && categories.length > 0 && (\n//         <div className=\"dropdown\">\n//           <label htmlFor=\"category\">Select Category:</label>\n//           <select\n//             id=\"category\"\n//             value={selectedCategoryId}\n//             onChange={(e) => {\n//               setSelectedCategoryId(e.target.value);\n//               setFoodItems([]);\n//             }}\n//           >\n//             <option value=\"\">-- Select Category --</option>\n//             {categories.map((category) => (\n//               <option key={category.id} value={category.id}>\n//                 {category.categoryName}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//       )}\n\n//       {/* Food Items List */}\n//       {selectedCategoryId && (\n//         <div className=\"food-items-list\">\n//           <h3>Food Items</h3>\n//           {foodItems.length > 0 ? (\n//             <ul>\n//               {foodItems.map((item) => (\n//                 <li key={item.id}>\n//                   <strong>{item.foodItemName}</strong> - {item.description} - ${item.price}\n//                 </li>\n//               ))}\n//             </ul>\n//           ) : (\n//             <p>No food items available for this category.</p>\n//           )}\n//         </div>\n//       )}\n\n//       {/* Add Food Item Form */}\n//       {selectedCategoryId && (\n//         <div className=\"add-food-item\">\n//           <h3>Add New Food Item</h3>\n//           <form onSubmit={handleAddFoodItem}>\n//             <div>\n//               <label>Food Item Name:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"foodItemName\"\n//                 value={newFoodItem.foodItemName}\n//                 onChange={handleFoodItemChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Description:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"description\"\n//                 value={newFoodItem.description}\n//                 onChange={handleFoodItemChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Price:</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"price\"\n//                 value={newFoodItem.price}\n//                 onChange={handleFoodItemChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Is Available:</label>\n//               <input\n//                 type=\"checkbox\"\n//                 name=\"isAvailable\"\n//                 checked={newFoodItem.isAvailable}\n//                 onChange={(e) =>\n//                   setNewFoodItem((prev) => ({\n//                     ...prev,\n//                     isAvailable: e.target.checked,\n//                   }))\n//                 }\n//               />\n//             </div>\n//             <button type=\"submit\">Add Food Item</button>\n//           </form>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ViewFoodItem;","map":{"version":3,"names":[],"sources":["C:/Users/DELL/Desktop/ReactJs/restaurant-orders-portal-frontened/src/components/ViewFoodItem.js"],"sourcesContent":["\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import './ViewFoodItem.css';\r\n\r\n// const ViewFoodItem = () => {\r\n//   const [restaurants, setRestaurants] = useState([]);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [foodItems, setFoodItems] = useState([]);\r\n//   const [selectedRestaurantId, setSelectedRestaurantId] = useState('');\r\n//   const [selectedCategoryId, setSelectedCategoryId] = useState('');\r\n//   const [error, setError] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const [newFoodItem, setNewFoodItem] = useState({\r\n//     foodItemName: '',\r\n//     description: '',\r\n//     price: '',\r\n//     isAvailable: false,\r\n//   });\r\n\r\n//   const userId = localStorage.getItem('userId');\r\n\r\n//   // Fetch restaurants by userId\r\n//   useEffect(() => {\r\n//     if (userId) {\r\n//       setLoading(true);\r\n//       axios\r\n//         .get(`http://localhost:300/restaurant/restaurants/${userId}`)\r\n//         .then((response) => {\r\n//           setRestaurants(response.data);\r\n//           setLoading(false);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching restaurants!\", error);\r\n//           setError(\"Failed to load restaurants.\");\r\n//           setLoading(false);\r\n//         });\r\n//     }\r\n//   }, [userId]);\r\n\r\n//   // Fetch categories by restaurant ID\r\n//   useEffect(() => {\r\n//     if (selectedRestaurantId) {\r\n//       setLoading(true);\r\n//       axios\r\n//         .get(`http://localhost:300/categories/foodCategoryByRestaurantId/${selectedRestaurantId}`)\r\n//         .then((response) => {\r\n//           setCategories(response.data);\r\n//           setLoading(false);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching categories!\", error);\r\n//           setError(\"Failed to load categories.\");\r\n//           setLoading(false);\r\n//         });\r\n//     }\r\n//   }, [selectedRestaurantId]);\r\n\r\n//   // Fetch food items by category ID\r\n//   useEffect(() => {\r\n//     if (selectedCategoryId) {\r\n//       setLoading(true);\r\n//       axios\r\n//         .get(`http://localhost:300/foodItems/${selectedCategoryId}`)\r\n//         .then((response) => {\r\n//           setFoodItems(response.data);\r\n//           setLoading(false);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching food items!\", error);\r\n//           setError(\"Failed to load food items.\");\r\n//           setLoading(false);\r\n//         });\r\n//     }\r\n//   }, [selectedCategoryId]);\r\n\r\n//   // Handle input change for the new food item\r\n//   const handleFoodItemChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setNewFoodItem((prev) => ({\r\n//       ...prev,\r\n//       [name]: value,\r\n//     }));\r\n//   };\r\n\r\n//   // Submit new food item\r\n//   const handleAddFoodItem = (e) => {\r\n//     e.preventDefault();\r\n//     const foodItemData = {\r\n//       ...newFoodItem,\r\n//       categoryId: parseInt(selectedCategoryId),\r\n//       restaurantId: parseInt(selectedRestaurantId),\r\n//     };\r\n\r\n//     axios\r\n//       .post('http://localhost:300/foodItems/add', foodItemData)\r\n//       .then((response) => {\r\n//         setFoodItems([...foodItems, response.data]);\r\n//         // Reset the form after successful submission\r\n//         setNewFoodItem({\r\n//           foodItemName: '',\r\n//           description: '',\r\n//           price: '',\r\n//           isAvailable: false,\r\n//         });\r\n//         setError(null);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error adding food item!\", error);\r\n//         setError(\"Failed to add food item.\");\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"view-food-item-container\">\r\n//       <h2>View and Add Food Items</h2>\r\n\r\n//       {loading && <p>Loading...</p>}\r\n//       {error && <div className=\"error-message\">{error}</div>}\r\n\r\n//       {/* Restaurant Dropdown */}\r\n//       <div className=\"dropdown\">\r\n//         <label htmlFor=\"restaurant\">Select Restaurant:</label>\r\n//         <select\r\n//           id=\"restaurant\"\r\n//           value={selectedRestaurantId}\r\n//           onChange={(e) => {\r\n//             setSelectedRestaurantId(e.target.value);\r\n//             setSelectedCategoryId(''); // Reset category when restaurant changes\r\n//             setCategories([]);\r\n//             setFoodItems([]);\r\n//           }}\r\n//         >\r\n//           <option value=\"\">-- Select Restaurant --</option>\r\n//           {restaurants.map((restaurant) => (\r\n//             <option key={restaurant.id} value={restaurant.id}>\r\n//               {restaurant.restaurantName}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n\r\n//       {/* Category Dropdown */}\r\n//       {selectedRestaurantId && categories.length > 0 && (\r\n//         <div className=\"dropdown\">\r\n//           <label htmlFor=\"category\">Select Category:</label>\r\n//           <select\r\n//             id=\"category\"\r\n//             value={selectedCategoryId}\r\n//             onChange={(e) => {\r\n//               setSelectedCategoryId(e.target.value);\r\n//               setFoodItems([]);\r\n//             }}\r\n//           >\r\n//             <option value=\"\">-- Select Category --</option>\r\n//             {categories.map((category) => (\r\n//               <option key={category.id} value={category.id}>\r\n//                 {category.categoryName}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Food Items List */}\r\n//       {selectedCategoryId && (\r\n//         <div className=\"food-items-list\">\r\n//           <h3>Food Items</h3>\r\n//           {foodItems.length > 0 ? (\r\n//             <ul>\r\n//               {foodItems.map((item) => (\r\n//                 <li key={item.id}>\r\n//                   <strong>{item.foodItemName}</strong> - {item.description} - ${item.price}\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           ) : (\r\n//             <p>No food items available for this category.</p>\r\n//           )}\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Add Food Item Form */}\r\n//       {selectedCategoryId && (\r\n//         <div className=\"add-food-item\">\r\n//           <h3>Add New Food Item</h3>\r\n//           <form onSubmit={handleAddFoodItem}>\r\n//             <div>\r\n//               <label>Food Item Name:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"foodItemName\"\r\n//                 value={newFoodItem.foodItemName}\r\n//                 onChange={handleFoodItemChange}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label>Description:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"description\"\r\n//                 value={newFoodItem.description}\r\n//                 onChange={handleFoodItemChange}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label>Price:</label>\r\n//               <input\r\n//                 type=\"number\"\r\n//                 name=\"price\"\r\n//                 value={newFoodItem.price}\r\n//                 onChange={handleFoodItemChange}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label>Is Available:</label>\r\n//               <input\r\n//                 type=\"checkbox\"\r\n//                 name=\"isAvailable\"\r\n//                 checked={newFoodItem.isAvailable}\r\n//                 onChange={(e) =>\r\n//                   setNewFoodItem((prev) => ({\r\n//                     ...prev,\r\n//                     isAvailable: e.target.checked,\r\n//                   }))\r\n//                 }\r\n//               />\r\n//             </div>\r\n//             <button type=\"submit\">Add Food Item</button>\r\n//           </form>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ViewFoodItem;\r\n"],"mappings":";;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
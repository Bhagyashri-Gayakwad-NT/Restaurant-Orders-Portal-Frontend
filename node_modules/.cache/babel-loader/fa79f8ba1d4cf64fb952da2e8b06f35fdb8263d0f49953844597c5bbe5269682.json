{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactJs\\\\restaurant-orders-portal-frontened\\\\src\\\\components\\\\ViewAllCategories.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ViewAllCategories.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ViewAllCategories = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [selectedRestaurantId, setSelectedRestaurantId] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [newCategory, setNewCategory] = useState('');\n  useEffect(() => {\n    const userId = localStorage.getItem('userId'); // Retrieve userId from local storage\n    if (userId) {\n      fetchRestaurants(userId);\n    }\n  }, []);\n  useEffect(() => {\n    if (selectedRestaurantId) {\n      fetchCategories(selectedRestaurantId);\n    }\n  }, [selectedRestaurantId]);\n  const fetchRestaurants = async userId => {\n    try {\n      const response = await axios.get(`http://localhost:300/restaurant/restaurants/${userId}`);\n      setRestaurants(response.data);\n    } catch (error) {\n      console.error('Error fetching restaurants:', error);\n    }\n  };\n  const fetchCategories = async restaurantId => {\n    try {\n      const response = await axios.get(`http://localhost:300/categories/foodCategoryByRestaurantId/${restaurantId}`);\n      setCategories(response.data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n  const handleAddCategory = async () => {\n    try {\n      const response = await axios.post('http://localhost:300/categories/addFoodCategory', {\n        restaurantId: selectedRestaurantId,\n        foodCategoryName: newCategory\n      });\n      setCategories([...categories, response.data]);\n      setNewCategory(''); // Clear the input field\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const handleUpdateCategory = async (id, updatedCategory) => {\n    try {\n      const response = await axios.put(`http://localhost:300/categories/foodCategoryByFoodCategoryId/${foodCategoryId}`, {\n        restaurantId: selectedRestaurantId,\n        foodCategoryName: updatedCategory.foodCategoryName\n      });\n      const updatedCategories = categories.map(category => category.foodCategoryId === id ? response.data : category);\n      setCategories(updatedCategories);\n    } catch (error) {\n      console.error('Error updating category:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-all-categories-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Food Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Restaurant: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedRestaurantId || '',\n        onChange: e => setSelectedRestaurantId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a restaurant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: restaurant.restaurantId,\n          children: restaurant.restaurantName\n        }, restaurant.restaurantId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), selectedRestaurantId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newCategory,\n          onChange: e => setNewCategory(e.target.value),\n          placeholder: \"Add New Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddCategory,\n          children: \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-list\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-card\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: category.foodCategoryName,\n            onChange: e => handleUpdateCategory(category.foodCategoryId, {\n              ...category,\n              foodCategoryName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this)\n        }, category.foodCategoryId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(ViewAllCategories, \"hFQTArjnlLdVVXmghqA0eJcaMpk=\");\n_c = ViewAllCategories;\nexport default ViewAllCategories;\nvar _c;\n$RefreshReg$(_c, \"ViewAllCategories\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewAllCategories","_s","restaurants","setRestaurants","selectedRestaurantId","setSelectedRestaurantId","categories","setCategories","newCategory","setNewCategory","userId","localStorage","getItem","fetchRestaurants","fetchCategories","response","get","data","error","console","restaurantId","handleAddCategory","post","foodCategoryName","handleUpdateCategory","id","updatedCategory","put","foodCategoryId","updatedCategories","map","category","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","disabled","restaurant","restaurantName","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactJs/restaurant-orders-portal-frontened/src/components/ViewAllCategories.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ViewAllCategories.css';\r\n\r\nconst ViewAllCategories = () => {\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [selectedRestaurantId, setSelectedRestaurantId] = useState(null);\r\n    const [categories, setCategories] = useState([]);\r\n    const [newCategory, setNewCategory] = useState('');\r\n\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('userId'); // Retrieve userId from local storage\r\n        if (userId) {\r\n            fetchRestaurants(userId);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedRestaurantId) {\r\n            fetchCategories(selectedRestaurantId);\r\n        }\r\n    }, [selectedRestaurantId]);\r\n\r\n    const fetchRestaurants = async (userId) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:300/restaurant/restaurants/${userId}`);\r\n            setRestaurants(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching restaurants:', error);\r\n        }\r\n    };\r\n\r\n    const fetchCategories = async (restaurantId) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:300/categories/foodCategoryByRestaurantId/${restaurantId}`);\r\n            setCategories(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching categories:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddCategory = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:300/categories/addFoodCategory', {\r\n                restaurantId: selectedRestaurantId,\r\n                foodCategoryName: newCategory\r\n            });\r\n            setCategories([...categories, response.data]);\r\n            setNewCategory(''); // Clear the input field\r\n        } catch (error) {\r\n            console.error('Error adding category:', error);\r\n        }\r\n    };\r\n\r\n    const handleUpdateCategory = async (id, updatedCategory) => {\r\n        try {\r\n            const response = await axios.put(`http://localhost:300/categories/foodCategoryByFoodCategoryId/${foodCategoryId}`, {\r\n                restaurantId: selectedRestaurantId,\r\n                foodCategoryName: updatedCategory.foodCategoryName,\r\n            });\r\n            const updatedCategories = categories.map((category) =>\r\n                category.foodCategoryId === id ? response.data : category\r\n            );\r\n            setCategories(updatedCategories);\r\n        } catch (error) {\r\n            console.error('Error updating category:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"view-all-categories-container\">\r\n            <h2>Food Categories</h2>\r\n\r\n            <div className=\"restaurant-dropdown\">\r\n                <label>Select Restaurant: </label>\r\n                <select\r\n                    value={selectedRestaurantId || ''}\r\n                    onChange={(e) => setSelectedRestaurantId(e.target.value)}\r\n                >\r\n                    <option value=\"\" disabled>Select a restaurant</option>\r\n                    {restaurants.map((restaurant) => (\r\n                        <option key={restaurant.restaurantId} value={restaurant.restaurantId}>\r\n                            {restaurant.restaurantName}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {selectedRestaurantId && (\r\n                <>\r\n                    <div className=\"add-category\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newCategory}\r\n                            onChange={(e) => setNewCategory(e.target.value)}\r\n                            placeholder=\"Add New Category\"\r\n                        />\r\n                        <button onClick={handleAddCategory}>Add Category</button>\r\n                    </div>\r\n                    <div className=\"categories-list\">\r\n                        {categories.map((category) => (\r\n                            <div key={category.foodCategoryId} className=\"category-card\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={category.foodCategoryName}\r\n                                    onChange={(e) =>\r\n                                        handleUpdateCategory(category.foodCategoryId, {\r\n                                            ...category,\r\n                                            foodCategoryName: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewAllCategories;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactJs\\\\restaurant-orders-portal-frontened\\\\src\\\\components\\\\ViewCart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from './context/UserContext'; // Import UserContext\nimport Navbar from './Navbar';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './ViewCart.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ViewCart = () => {\n  _s();\n  const {\n    user\n  } = useContext(UserContext); // Get user from context\n  const {\n    restaurantId\n  } = useParams();\n  const [cartItems, setCartItems] = useState([]);\n  const [orderPlaced, setOrderPlaced] = useState(false);\n  const [addresses, setAddresses] = useState([]);\n  const [selectedAddressId, setSelectedAddressId] = useState(null);\n  const [showAddAddressForm, setShowAddAddressForm] = useState(false); // Toggle for add address form\n  const [newAddress, setNewAddress] = useState({\n    street: '',\n    city: '',\n    state: '',\n    country: '',\n    pinCode: ''\n  });\n  const [errors, setErrors] = useState({}); // State for validation errors\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!user) return; // Ensure user is available\n\n    // Fetch cart items and their images in a single operation\n    const fetchCartItems = async () => {\n      try {\n        const cartResponse = await fetch(`http://localhost:200/cart/user/${user.id}/restaurant/${restaurantId}`);\n        const cartData = await cartResponse.json();\n        const cartItemsWithImages = await Promise.all(cartData.map(async item => {\n          const imageResponse = await fetch(`http://localhost:300/foodItems/${item.foodItemId}/image`);\n          const imageBlob = await imageResponse.blob();\n          const imageUrl = URL.createObjectURL(imageBlob);\n          return {\n            ...item,\n            imageUrl\n          }; // Add imageUrl to each cart item\n        }));\n        setCartItems(cartItemsWithImages);\n      } catch (error) {\n        console.error('Error fetching cart items or images:', error);\n      }\n    };\n    fetchCartItems();\n\n    // Fetch user addresses\n    fetch(`http://localhost:100/addresses/user/${user.id}`).then(response => response.json()).then(data => {\n      setAddresses(data);\n      if (data.length > 0) {\n        setSelectedAddressId(data[0].id);\n      }\n    }).catch(error => console.error('Error fetching addresses:', error));\n  }, [user, restaurantId]);\n  const validateAddress = () => {\n    const newErrors = {};\n    const {\n      street,\n      city,\n      state,\n      country,\n      pinCode\n    } = newAddress;\n\n    // Validate street\n    if (!street) {\n      newErrors.street = \"Street is required\";\n    } else if (street.length < 4 || street.length > 100) {\n      newErrors.street = \"Street must be between 4 and 100 characters\";\n    }\n\n    // Validate city\n    if (!city) {\n      newErrors.city = \"City is required\";\n    } else if (city.length < 3 || city.length > 50) {\n      newErrors.city = \"City must be between 3 and 50 characters\";\n    } else if (!/^[a-zA-Z]+$/.test(city)) {\n      newErrors.city = \"City must contain only alphabetic characters\";\n    }\n\n    // Validate state\n    if (!state) {\n      newErrors.state = \"State is required\";\n    } else if (state.length < 2 || state.length > 50) {\n      newErrors.state = \"State must be between 2 and 50 characters\";\n    } else if (!/^[a-zA-Z\\s]+$/.test(state)) {\n      newErrors.state = \"State must contain only alphabetic characters\";\n    }\n\n    // Validate country\n    if (!country) {\n      newErrors.country = \"Country is required\";\n    } else if (country.length > 50) {\n      newErrors.country = \"Country cannot be longer than 50 characters\";\n    } else if (!/^[a-zA-Z]+$/.test(country)) {\n      newErrors.country = \"Country must contain only alphabetic characters\";\n    }\n\n    // Validate pin code\n    if (!pinCode) {\n      newErrors.pinCode = \"Pin code is required\";\n    } else if (!/^[0-9]{6}$/.test(pinCode)) {\n      newErrors.pinCode = \"Pin code must be exactly 6 digits\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0; // Return true if no errors\n  };\n  const handleQuantityChange = (cartId, quantityChange) => {\n    fetch(`http://localhost:200/cart/update/${cartId}?quantityChange=${quantityChange}`, {\n      method: 'PUT'\n    }).then(response => response.json()).then(data => {\n      setCartItems(prevItems => prevItems.map(item => item.cartId === cartId ? {\n        ...item,\n        quantity: item.quantity + quantityChange\n      } : item));\n    }).catch(error => console.error('Error updating cart quantity:', error));\n  };\n  const handlePlaceOrder = () => {\n    if (!selectedAddressId) {\n      alert('Please select a delivery address');\n      return;\n    }\n    const orderData = {\n      userId: user.id,\n      // Use user.id from context\n      restaurantId,\n      addressId: selectedAddressId,\n      cartItems: cartItems.map(item => ({\n        foodItemId: item.foodItemId,\n        quantity: item.quantity,\n        price: item.price\n      }))\n    };\n    fetch(`http://localhost:200/orders/place`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(orderData)\n    }).then(response => {\n      if (!response.ok) {\n        return response.json().then(errData => {\n          throw new Error(errData.message || \"Something went wrong\");\n        });\n      }\n      return response.json();\n    }).then(data => {\n      setOrderPlaced(true);\n      toast.success(data.message);\n      setTimeout(() => {\n        navigate(\"/UserDashboard\");\n      }, 2000);\n    }).catch(error => {\n      toast.error(error.message);\n    });\n  };\n  const handleAddAddress = () => {\n    if (!validateAddress()) return;\n    const addressData = {\n      ...newAddress,\n      userId: user.id\n    };\n    fetch(`http://localhost:100/addresses/add`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(addressData)\n    }).then(response => response.json()).then(data => {\n      setAddresses([...addresses, data]);\n      setShowAddAddressForm(false);\n      toast.success(data.message);\n    }).catch(error => {\n      console.error('Error adding address:', error);\n      toast.error(error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-cart\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), orderPlaced ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Order placed successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-container\",\n        children: cartItems.length > 0 ? cartItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-card\",\n          children: [item.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.imageUrl,\n            alt: item.foodItemName,\n            className: \"food-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: item.foodItemName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: Rs. \", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quantity-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleQuantityChange(item.cartId, -1),\n                disabled: item.quantity <= 1,\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleQuantityChange(item.cartId, 1),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Total: Rs. \", item.price * item.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 19\n          }, this)]\n        }, item.cartId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your cart is empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), cartItems.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"address-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Select Delivery Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this), addresses.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedAddressId,\n              onChange: e => setSelectedAddressId(e.target.value),\n              children: addresses.map(address => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: address.id,\n                children: `${address.street}, ${address.city}, ${address.state}, ${address.country}, ${address.pinCode}`\n              }, address.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No addresses available. Please add an address.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-address\",\n          children: showAddAddressForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Add New Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Street\",\n              value: newAddress.street,\n              onChange: e => setNewAddress({\n                ...newAddress,\n                street: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 21\n            }, this), errors.street && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.street\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"City\",\n              value: newAddress.city,\n              onChange: e => setNewAddress({\n                ...newAddress,\n                city: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 21\n            }, this), errors.city && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"State\",\n              value: newAddress.state,\n              onChange: e => setNewAddress({\n                ...newAddress,\n                state: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }, this), errors.state && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Country\",\n              value: newAddress.country,\n              onChange: e => setNewAddress({\n                ...newAddress,\n                country: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 21\n            }, this), errors.country && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 40\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Pin Code\",\n              value: newAddress.pinCode,\n              onChange: e => setNewAddress({\n                ...newAddress,\n                pinCode: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 21\n            }, this), errors.pinCode && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.pinCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 40\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddAddress,\n              children: \"Add Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowAddAddressForm(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAddAddressForm(true),\n            children: \"Add New Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePlaceOrder,\n          disabled: !selectedAddressId,\n          children: \"Place Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewCart, \"kNPDX7XdQcUV1LehUkj8VpxHefo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ViewCart;\nexport default ViewCart;\nvar _c;\n$RefreshReg$(_c, \"ViewCart\");","map":{"version":3,"names":["React","useEffect","useState","useContext","UserContext","Navbar","useNavigate","useParams","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewCart","_s","user","restaurantId","cartItems","setCartItems","orderPlaced","setOrderPlaced","addresses","setAddresses","selectedAddressId","setSelectedAddressId","showAddAddressForm","setShowAddAddressForm","newAddress","setNewAddress","street","city","state","country","pinCode","errors","setErrors","navigate","fetchCartItems","cartResponse","fetch","id","cartData","json","cartItemsWithImages","Promise","all","map","item","imageResponse","foodItemId","imageBlob","blob","imageUrl","URL","createObjectURL","error","console","then","response","data","length","catch","validateAddress","newErrors","test","Object","keys","handleQuantityChange","cartId","quantityChange","method","prevItems","quantity","handlePlaceOrder","alert","orderData","userId","addressId","price","headers","body","JSON","stringify","ok","errData","Error","message","success","setTimeout","handleAddAddress","addressData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","foodItemName","onClick","disabled","value","onChange","e","target","address","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactJs/restaurant-orders-portal-frontened/src/components/ViewCart.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react'; \nimport { UserContext } from './context/UserContext'; // Import UserContext\nimport Navbar from './Navbar';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './ViewCart.css';\n\nconst ViewCart = () => {\n  const { user } = useContext(UserContext); // Get user from context\n  const { restaurantId } = useParams();\n  const [cartItems, setCartItems] = useState([]);\n  const [orderPlaced, setOrderPlaced] = useState(false);\n  const [addresses, setAddresses] = useState([]);\n  const [selectedAddressId, setSelectedAddressId] = useState(null);\n  const [showAddAddressForm, setShowAddAddressForm] = useState(false); // Toggle for add address form\n  const [newAddress, setNewAddress] = useState({\n    street: '',\n    city: '',\n    state: '',\n    country: '',\n    pinCode: ''\n  });\n\n  const [errors, setErrors] = useState({}); // State for validation errors\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!user) return; // Ensure user is available\n\n    // Fetch cart items and their images in a single operation\n    const fetchCartItems = async () => {\n      try {\n        const cartResponse = await fetch(`http://localhost:200/cart/user/${user.id}/restaurant/${restaurantId}`);\n        const cartData = await cartResponse.json();\n\n        const cartItemsWithImages = await Promise.all(\n          cartData.map(async (item) => {\n            const imageResponse = await fetch(`http://localhost:300/foodItems/${item.foodItemId}/image`);\n            const imageBlob = await imageResponse.blob();\n            const imageUrl = URL.createObjectURL(imageBlob);\n\n            return { ...item, imageUrl }; // Add imageUrl to each cart item\n          })\n        );\n\n        setCartItems(cartItemsWithImages);\n      } catch (error) {\n        console.error('Error fetching cart items or images:', error);\n      }\n    };\n\n    fetchCartItems();\n\n    // Fetch user addresses\n    fetch(`http://localhost:100/addresses/user/${user.id}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setAddresses(data);\n        if (data.length > 0) {\n          setSelectedAddressId(data[0].id);\n        }\n      })\n      .catch((error) => console.error('Error fetching addresses:', error));\n  }, [user, restaurantId]);\n\n  const validateAddress = () => {\n    const newErrors = {};\n    const { street, city, state, country, pinCode } = newAddress;\n\n    // Validate street\n    if (!street) {\n      newErrors.street = \"Street is required\";\n    } else if (street.length < 4 || street.length > 100) {\n      newErrors.street = \"Street must be between 4 and 100 characters\";\n    }\n\n    // Validate city\n    if (!city) {\n      newErrors.city = \"City is required\";\n    } else if (city.length < 3 || city.length > 50) {\n      newErrors.city = \"City must be between 3 and 50 characters\";\n    } else if (!/^[a-zA-Z]+$/.test(city)) {\n      newErrors.city = \"City must contain only alphabetic characters\";\n    }\n\n    // Validate state\n    if (!state) {\n      newErrors.state = \"State is required\";\n    } else if (state.length < 2 || state.length > 50) {\n      newErrors.state = \"State must be between 2 and 50 characters\";\n    } else if (!/^[a-zA-Z\\s]+$/.test(state)) {\n      newErrors.state = \"State must contain only alphabetic characters\";\n    }\n\n    // Validate country\n    if (!country) {\n      newErrors.country = \"Country is required\";\n    } else if (country.length > 50) {\n      newErrors.country = \"Country cannot be longer than 50 characters\";\n    } else if (!/^[a-zA-Z]+$/.test(country)) {\n      newErrors.country = \"Country must contain only alphabetic characters\";\n    }\n\n    // Validate pin code\n    if (!pinCode) {\n      newErrors.pinCode = \"Pin code is required\";\n    } else if (!/^[0-9]{6}$/.test(pinCode)) {\n      newErrors.pinCode = \"Pin code must be exactly 6 digits\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0; // Return true if no errors\n  };\n\n  const handleQuantityChange = (cartId, quantityChange) => {\n    fetch(`http://localhost:200/cart/update/${cartId}?quantityChange=${quantityChange}`, {\n      method: 'PUT',\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setCartItems((prevItems) =>\n          prevItems.map((item) =>\n            item.cartId === cartId ? { ...item, quantity: item.quantity + quantityChange } : item\n          )\n        );\n      })\n      .catch((error) => console.error('Error updating cart quantity:', error));\n  };\n\n  const handlePlaceOrder = () => {\n    if (!selectedAddressId) {\n      alert('Please select a delivery address');\n      return;\n    }\n\n    const orderData = {\n      userId: user.id, // Use user.id from context\n      restaurantId,\n      addressId: selectedAddressId,\n      cartItems: cartItems.map((item) => ({\n        foodItemId: item.foodItemId,\n        quantity: item.quantity,\n        price: item.price,\n      })),\n    };\n\n    fetch(`http://localhost:200/orders/place`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(orderData),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          return response.json().then((errData) => {\n            throw new Error(errData.message || \"Something went wrong\");\n          });\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setOrderPlaced(true);\n        toast.success(data.message);\n        setTimeout(() => {\n          navigate(\"/UserDashboard\");\n        }, 2000);\n      })\n      .catch((error) => {\n        toast.error(error.message);\n      });\n  };\n\n  const handleAddAddress = () => {\n    if (!validateAddress()) return; \n\n    const addressData = {\n      ...newAddress,\n      userId: user.id\n    };\n\n    fetch(`http://localhost:100/addresses/add`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(addressData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setAddresses([...addresses, data]); \n        setShowAddAddressForm(false); \n        toast.success(data.message);\n      })\n      .catch((error) => {\n        console.error('Error adding address:', error);\n        toast.error(error.message);\n      });\n  };\n\n  return (\n    <div className=\"view-cart\">\n      <Navbar />\n      <h2>Your Cart</h2>\n      {orderPlaced ? (\n        <p>Order placed successfully!</p>\n      ) : (\n        <>\n          <div className=\"cart-container\">\n            {cartItems.length > 0 ? (\n              cartItems.map((item) => (\n                <div key={item.cartId} className=\"cart-card\">\n                  {item.imageUrl && <img src={item.imageUrl} alt={item.foodItemName} className=\"food-image\" />}\n                  <div className=\"cart-details\">\n                    <h4>{item.foodItemName}</h4>\n                    <p>Price: Rs. {item.price}</p>\n                    <div className=\"quantity-controls\">\n                      <button onClick={() => handleQuantityChange(item.cartId, -1)} disabled={item.quantity <= 1}>\n                        -\n                      </button>\n                      <span>{item.quantity}</span>\n                      <button onClick={() => handleQuantityChange(item.cartId, 1)}>+</button>\n                    </div>\n                    <p>Total: Rs. {item.price * item.quantity}</p>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <p>Your cart is empty</p>\n            )}\n          </div>\n\n          {cartItems.length > 0 && (\n            <>\n              <div className=\"address-section\">\n                <h3>Select Delivery Address:</h3>\n                {addresses.length > 0 ? (\n                  <>\n                    <select value={selectedAddressId} onChange={(e) => setSelectedAddressId(e.target.value)}>\n                      {addresses.map((address) => (\n                        <option key={address.id} value={address.id}>\n                          {`${address.street}, ${address.city}, ${address.state}, ${address.country}, ${address.pinCode}`}\n                        </option>\n                      ))}\n                    </select>\n                  </>\n                ) : (\n                  <p>No addresses available. Please add an address.</p>\n                )}\n              </div>\n\n              <div className=\"add-address\">\n                {showAddAddressForm ? (\n                  <div>\n                    <h3>Add New Address:</h3>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Street\"\n                      value={newAddress.street}\n                      onChange={(e) => setNewAddress({ ...newAddress, street: e.target.value })}\n                    />\n                    {errors.street && <p className=\"error\">{errors.street}</p>}\n                    <input\n                      type=\"text\"\n                      placeholder=\"City\"\n                      value={newAddress.city}\n                      onChange={(e) => setNewAddress({ ...newAddress, city: e.target.value })}\n                    />\n                    {errors.city && <p className=\"error\">{errors.city}</p>}\n                    <input\n                      type=\"text\"\n                      placeholder=\"State\"\n                      value={newAddress.state}\n                      onChange={(e) => setNewAddress({ ...newAddress, state: e.target.value })}\n                    />\n                    {errors.state && <p className=\"error\">{errors.state}</p>}\n                    <input\n                      type=\"text\"\n                      placeholder=\"Country\"\n                      value={newAddress.country}\n                      onChange={(e) => setNewAddress({ ...newAddress, country: e.target.value })}\n                    />\n                    {errors.country && <p className=\"error\">{errors.country}</p>}\n                    <input\n                      type=\"text\"\n                      placeholder=\"Pin Code\"\n                      value={newAddress.pinCode}\n                      onChange={(e) => setNewAddress({ ...newAddress, pinCode: e.target.value })}\n                    />\n                    {errors.pinCode && <p className=\"error\">{errors.pinCode}</p>}\n                    <button onClick={handleAddAddress}>Add Address</button>\n                    <button onClick={() => setShowAddAddressForm(false)}>Cancel</button>\n                  </div>\n                ) : (\n                  <button onClick={() => setShowAddAddressForm(true)}>Add New Address</button>\n                )}\n              </div>\n\n              <button onClick={handlePlaceOrder} disabled={!selectedAddressId}>\n                Place Order\n              </button>\n            </>\n          )}\n          <ToastContainer />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ViewCart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
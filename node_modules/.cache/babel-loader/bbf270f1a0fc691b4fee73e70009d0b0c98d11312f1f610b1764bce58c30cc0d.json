{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './ViewAllCategories.css';\n\n// const ViewAllCategories = ({ restaurantId }) => {\n//     const [categories, setCategories] = useState([]);\n//     const [newCategory, setNewCategory] = useState({ restaurantId, foodCategoryName: '' });\n\n//     useEffect(() => {\n//         fetchCategories();\n//     }, []);\n\n//     const fetchCategories = async () => {\n//         try {\n//             const response = await axios.get(`/categories/foodCategoryByRestaurantId/${restaurantId}`);\n//             setCategories(response.data);\n//         } catch (error) {\n//             console.error('Error fetching categories:', error);\n//         }\n//     };\n\n//     const handleAddCategory = async () => {\n//         try {\n//             const response = await axios.post('/categories/addFoodCategory', newCategory);\n//             setCategories([...categories, response.data]);\n//             setNewCategory({ ...newCategory, foodCategoryName: '' });\n//         } catch (error) {\n//             console.error('Error adding category:', error);\n//         }\n//     };\n\n//     const handleUpdateCategory = async (id, updatedCategory) => {\n//         try {\n//             const response = await axios.put(`/categories/foodCategoryByFoodCategoryId/${id}`, updatedCategory);\n//             const updatedCategories = categories.map((category) =>\n//                 category.foodCategoryId === id ? response.data : category\n//             );\n//             setCategories(updatedCategories);\n//         } catch (error) {\n//             console.error('Error updating category:', error);\n//         }\n//     };\n\n//     return (\n//         <div className=\"view-all-categories-container\">\n//             <h2>Food Categories</h2>\n//             <div className=\"add-category\">\n//                 <input\n//                     type=\"text\"\n//                     value={newCategory.foodCategoryName}\n//                     onChange={(e) => setNewCategory({ ...newCategory, foodCategoryName: e.target.value })}\n//                     placeholder=\"Add New Category\"\n//                 />\n//                 <button onClick={handleAddCategory}>Add Category</button>\n//             </div>\n//             <div className=\"categories-list\">\n//                 {categories.map((category) => (\n//                     <div key={category.foodCategoryId} className=\"category-card\">\n//                         <input\n//                             type=\"text\"\n//                             value={category.foodCategoryName}\n//                             onChange={(e) =>\n//                                 handleUpdateCategory(category.foodCategoryId, {\n//                                     ...category,\n//                                     foodCategoryName: e.target.value,\n//                                 })\n//                             }\n//                         />\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default ViewAllCategories;","map":{"version":3,"names":[],"sources":["C:/Users/DELL/Desktop/ReactJs/restaurant-orders-portal-frontened/src/components/ViewAllCategories.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import './ViewAllCategories.css';\r\n\r\n// const ViewAllCategories = ({ restaurantId }) => {\r\n//     const [categories, setCategories] = useState([]);\r\n//     const [newCategory, setNewCategory] = useState({ restaurantId, foodCategoryName: '' });\r\n\r\n//     useEffect(() => {\r\n//         fetchCategories();\r\n//     }, []);\r\n\r\n//     const fetchCategories = async () => {\r\n//         try {\r\n//             const response = await axios.get(`/categories/foodCategoryByRestaurantId/${restaurantId}`);\r\n//             setCategories(response.data);\r\n//         } catch (error) {\r\n//             console.error('Error fetching categories:', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleAddCategory = async () => {\r\n//         try {\r\n//             const response = await axios.post('/categories/addFoodCategory', newCategory);\r\n//             setCategories([...categories, response.data]);\r\n//             setNewCategory({ ...newCategory, foodCategoryName: '' });\r\n//         } catch (error) {\r\n//             console.error('Error adding category:', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleUpdateCategory = async (id, updatedCategory) => {\r\n//         try {\r\n//             const response = await axios.put(`/categories/foodCategoryByFoodCategoryId/${id}`, updatedCategory);\r\n//             const updatedCategories = categories.map((category) =>\r\n//                 category.foodCategoryId === id ? response.data : category\r\n//             );\r\n//             setCategories(updatedCategories);\r\n//         } catch (error) {\r\n//             console.error('Error updating category:', error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"view-all-categories-container\">\r\n//             <h2>Food Categories</h2>\r\n//             <div className=\"add-category\">\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={newCategory.foodCategoryName}\r\n//                     onChange={(e) => setNewCategory({ ...newCategory, foodCategoryName: e.target.value })}\r\n//                     placeholder=\"Add New Category\"\r\n//                 />\r\n//                 <button onClick={handleAddCategory}>Add Category</button>\r\n//             </div>\r\n//             <div className=\"categories-list\">\r\n//                 {categories.map((category) => (\r\n//                     <div key={category.foodCategoryId} className=\"category-card\">\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             value={category.foodCategoryName}\r\n//                             onChange={(e) =>\r\n//                                 handleUpdateCategory(category.foodCategoryId, {\r\n//                                     ...category,\r\n//                                     foodCategoryName: e.target.value,\r\n//                                 })\r\n//                             }\r\n//                         />\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ViewAllCategories;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactJs\\\\restaurant-orders-portal-frontened\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  let [password, setPassword] = useState('');\n  const [error, setError] = useState({});\n  const navigate = useNavigate();\n  const validateEmail = email => {\n    const re = /^[A-Za-z0-9._%+-]+@nucleusteq\\.com$/;\n    return re.test(String(email).toLowerCase());\n  };\n  const validatePassword = password => {\n    const re = /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()])[A-Za-z\\d!@#$%^&*()]{6,}$/;\n    return re.test(password);\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    const validationErrors = {};\n    if (!email) {\n      validationErrors.email = 'Email is required.';\n    } else if (!validateEmail(email)) {\n      validationErrors.email = 'Email must end with @nucleusteq.com.';\n    }\n    if (!password) {\n      validationErrors.password = 'Password is required.';\n    } else if (!validatePassword(password)) {\n      validationErrors.password = 'Password must be at least 6 characters long and include at least one uppercase letter, one digit, and one special character.';\n    }\n    if (Object.keys(validationErrors).length > 0) {\n      setError(validationErrors);\n      return;\n    }\n\n    // Encode password\n    const encodedPassword = btoa(password);\n    try {\n      const response = await fetch('http://localhost:100/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password: encodedPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Store user ID in local storage\n        localStorage.setItem('userId', data.userId);\n\n        // Redirect based on role\n        navigate(data.role === 'USER' ? '/UserDashboard' : '/RestaurantOwnerDashboard');\n      } else {\n        setError({\n          server: data.message || 'Login failed'\n        });\n      }\n    } catch (error) {\n      setError({\n        server: 'An error occurred. Please try again.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), error.server && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error.server\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), error.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), error.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"If new user, then \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"register here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 27\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"9buwVSkFOibQbwj80PmRMlyuERw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","error","setError","navigate","validateEmail","re","test","String","toLowerCase","validatePassword","handleLogin","e","preventDefault","validationErrors","Object","keys","length","encodedPassword","btoa","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","userId","role","server","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","to","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactJs/restaurant-orders-portal-frontened/src/components/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './LoginPage.css';\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  let [password, setPassword] = useState('');\r\n  const [error, setError] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const validateEmail = (email) => {\r\n    const re = /^[A-Za-z0-9._%+-]+@nucleusteq\\.com$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const re = /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()])[A-Za-z\\d!@#$%^&*()]{6,}$/;\r\n    return re.test(password);\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = {};\r\n\r\n    if (!email) {\r\n      validationErrors.email = 'Email is required.';\r\n    } else if (!validateEmail(email)) {\r\n      validationErrors.email = 'Email must end with @nucleusteq.com.';\r\n    }\r\n\r\n    if (!password) {\r\n      validationErrors.password = 'Password is required.';\r\n    } else if (!validatePassword(password)) {\r\n      validationErrors.password = 'Password must be at least 6 characters long and include at least one uppercase letter, one digit, and one special character.';\r\n    }\r\n\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setError(validationErrors);\r\n      return;\r\n    }\r\n\r\n    // Encode password\r\n    const encodedPassword = btoa(password);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:100/users/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password: encodedPassword }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Store user ID in local storage\r\n        localStorage.setItem('userId', data.userId);\r\n\r\n        // Redirect based on role\r\n        navigate(data.role === 'USER' ? '/UserDashboard' : '/RestaurantOwnerDashboard');\r\n      } else {\r\n        setError({ server: data.message || 'Login failed' });\r\n      }\r\n    } catch (error) {\r\n      setError({ server: 'An error occurred. Please try again.' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      {error.server && <p className=\"error\">{error.server}</p>}\r\n      <form onSubmit={handleLogin}>\r\n        <div className=\"form-group\">\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          {error.email && <p className=\"error\">{error.email}</p>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {error.password && <p className=\"error\">{error.password}</p>}\r\n        </div>\r\n        <button type=\"submit\" className=\"btn-submit\">Login</button>\r\n      </form>\r\n      <p>\r\n        If new user, then <Link to=\"/register\">register here</Link>.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
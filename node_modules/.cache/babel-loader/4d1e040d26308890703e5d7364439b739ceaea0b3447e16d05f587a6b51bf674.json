{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import Navbar from './Navbar';\n// import './RestaurantDetails.css';\n\n// const RestaurantDetails = () => {\n//   const { restaurantId } = useParams(); // Get restaurantId from the URL params\n//   const [restaurant, setRestaurant] = useState(null);\n//   const [categories, setCategories] = useState([]);\n//   const [foodItems, setFoodItems] = useState([]);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Fetch restaurant details by restaurantId\n//     fetch(`http://localhost:300/restaurant/getRestaurant/${restaurantId}`)\n//       .then((response) => response.json())\n//       .then((data) => setRestaurant(data))\n//       .catch((error) => console.error('Error fetching restaurant details:', error));\n\n//     // Fetch food categories by restaurantId\n//     fetch(`http://localhost:300/categories/foodCategory/${restaurantId}`)\n//       .then((response) => response.json())\n//       .then((data) => setCategories(data))\n//       .catch((error) => console.error('Error fetching categories:', error));\n\n//     // Fetch food items by restaurantId\n//     fetch(`http://localhost:300/foodItems/getFoodItems/${restaurantId}`)\n//       .then((response) => response.json())\n//       .then((data) => setFoodItems(data))\n//       .catch((error) => console.error('Error fetching food items:', error));\n//   }, [restaurantId]);\n\n//   const handleAddToCart = (foodItemId, price) => {\n//     const userId = 1; // Replace with actual user ID from authentication context or state\n\n//     fetch('http://localhost:200/cart/add', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         userId,\n//         restaurantId,\n//         foodItemId,\n//         quantity: 1,\n//         price,\n//       }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log('Item added to cart:', data);\n//       })\n//       .catch((error) => console.error('Error adding item to cart:', error));\n//   };\n\n//   const handleViewCart = () => {\n//     const userId = 1; // Replace with actual user ID from authentication context or state\n//     navigate(`/cart/user/${userId}/restaurant/${restaurantId}`);\n//   };\n\n//   if (!restaurant) return <p>Loading...</p>;\n\n//   return (\n//     <div className=\"restaurant-details\">\n//       <Navbar />\n//       <h2>{restaurant.restaurantName}</h2>\n//       <img\n//         src={`data:image/jpeg;base64,${restaurant.restaurantImage}`} \n//         alt={restaurant.restaurantName}\n//         className=\"restaurant-image\"\n//       />\n//       <p>Location: {restaurant.restaurantAddress}</p>\n//       <p>Contact: {restaurant.contactNumber}</p>\n//       <p>Description: {restaurant.description}</p>\n\n//       <h3>Food Categories</h3>\n//       <ul>\n//         {categories.map((category) => (\n//           <li key={category.categoryId}>{category.categoryName}</li>\n//         ))}\n//       </ul>\n\n//       <h3>Food Items</h3>\n//       <ul>\n//         {foodItems.map((item) => (\n//           <li key={item.foodItemId}>\n//             <img \n//               src={`http://localhost:300/foodItems/${item.foodItemId}/image`} \n//               alt={item.foodItemName}\n//               className=\"food-item-image\"\n//             />\n//             {item.foodItemName} - Rs. {item.price}\n//             <button onClick={() => handleAddToCart(item.foodItemId, item.price)}>Add to Cart</button>\n//           </li>\n//         ))}\n//       </ul>\n\n//       <button onClick={handleViewCart}>View Cart</button>\n//     </div>\n//   );\n// };\n\n// export default RestaurantDetails;","map":{"version":3,"names":[],"sources":["C:/Users/DELL/Desktop/ReactJs/restaurant-orders-portal-frontened/src/components/RestaurantDetails.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import Navbar from './Navbar';\r\n// import './RestaurantDetails.css';\r\n\r\n// const RestaurantDetails = () => {\r\n//   const { restaurantId } = useParams(); // Get restaurantId from the URL params\r\n//   const [restaurant, setRestaurant] = useState(null);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [foodItems, setFoodItems] = useState([]);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     // Fetch restaurant details by restaurantId\r\n//     fetch(`http://localhost:300/restaurant/getRestaurant/${restaurantId}`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => setRestaurant(data))\r\n//       .catch((error) => console.error('Error fetching restaurant details:', error));\r\n\r\n//     // Fetch food categories by restaurantId\r\n//     fetch(`http://localhost:300/categories/foodCategory/${restaurantId}`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => setCategories(data))\r\n//       .catch((error) => console.error('Error fetching categories:', error));\r\n\r\n//     // Fetch food items by restaurantId\r\n//     fetch(`http://localhost:300/foodItems/getFoodItems/${restaurantId}`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => setFoodItems(data))\r\n//       .catch((error) => console.error('Error fetching food items:', error));\r\n//   }, [restaurantId]);\r\n\r\n//   const handleAddToCart = (foodItemId, price) => {\r\n//     const userId = 1; // Replace with actual user ID from authentication context or state\r\n\r\n//     fetch('http://localhost:200/cart/add', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({\r\n//         userId,\r\n//         restaurantId,\r\n//         foodItemId,\r\n//         quantity: 1,\r\n//         price,\r\n//       }),\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         console.log('Item added to cart:', data);\r\n//       })\r\n//       .catch((error) => console.error('Error adding item to cart:', error));\r\n//   };\r\n\r\n//   const handleViewCart = () => {\r\n//     const userId = 1; // Replace with actual user ID from authentication context or state\r\n//     navigate(`/cart/user/${userId}/restaurant/${restaurantId}`);\r\n//   };\r\n\r\n//   if (!restaurant) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div className=\"restaurant-details\">\r\n//       <Navbar />\r\n//       <h2>{restaurant.restaurantName}</h2>\r\n//       <img\r\n//         src={`data:image/jpeg;base64,${restaurant.restaurantImage}`} \r\n//         alt={restaurant.restaurantName}\r\n//         className=\"restaurant-image\"\r\n//       />\r\n//       <p>Location: {restaurant.restaurantAddress}</p>\r\n//       <p>Contact: {restaurant.contactNumber}</p>\r\n//       <p>Description: {restaurant.description}</p>\r\n\r\n//       <h3>Food Categories</h3>\r\n//       <ul>\r\n//         {categories.map((category) => (\r\n//           <li key={category.categoryId}>{category.categoryName}</li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       <h3>Food Items</h3>\r\n//       <ul>\r\n//         {foodItems.map((item) => (\r\n//           <li key={item.foodItemId}>\r\n//             <img \r\n//               src={`http://localhost:300/foodItems/${item.foodItemId}/image`} \r\n//               alt={item.foodItemName}\r\n//               className=\"food-item-image\"\r\n//             />\r\n//             {item.foodItemName} - Rs. {item.price}\r\n//             <button onClick={() => handleAddToCart(item.foodItemId, item.price)}>Add to Cart</button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       <button onClick={handleViewCart}>View Cart</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RestaurantDetails;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
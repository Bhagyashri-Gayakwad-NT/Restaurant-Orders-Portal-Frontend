{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactJs\\\\restaurant-orders-portal-frontened\\\\src\\\\components\\\\ViewFoodItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ViewFoodItem.css';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewFoodItem = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [foodItems, setFoodItems] = useState([]);\n  const [allFoodItems, setAllFoodItems] = useState([]);\n  const [selectedRestaurantId, setSelectedRestaurantId] = useState('');\n  const [selectedCategoryId, setSelectedCategoryId] = useState('');\n  const [error, setError] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [showAddFoodItemForm, setShowAddFoodItemForm] = useState(false);\n  const [editErrors, setEditErrors] = useState({});\n  const [newFoodItem, setNewFoodItem] = useState({\n    foodItemName: '',\n    description: '',\n    price: '',\n    //isAvailable: false,\n    foodItemImage: null\n  });\n  const [editingFoodItem, setEditingFoodItem] = useState(null);\n  const [updatedFoodItem, setUpdatedFoodItem] = useState({\n    foodItemName: '',\n    description: '',\n    price: '',\n    foodItemImage: null\n  });\n  const userId = localStorage.getItem('userId');\n\n  // Fetch restaurants based on user ID\n  useEffect(() => {\n    if (userId) {\n      setLoading(true);\n      axios.get(`http://localhost:300/restaurant/restaurants/${userId}`).then(response => {\n        setRestaurants(response.data);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Error fetching restaurants!', error);\n        setError('Failed to load restaurants.');\n        setLoading(false);\n      });\n    }\n  }, [userId]);\n\n  // Fetch categories based on selected restaurant ID\n  useEffect(() => {\n    if (selectedRestaurantId) {\n      setLoading(true);\n      axios.get(`http://localhost:300/categories/foodCategory/${selectedRestaurantId}`).then(response => {\n        setCategories(response.data);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Error fetching categories!', error);\n        setError('Failed to load categories.');\n        setLoading(false);\n      });\n    }\n  }, [selectedRestaurantId]);\n\n  // Fetch food items based on selected category ID\n  useEffect(() => {\n    if (selectedCategoryId) {\n      setLoading(true);\n      axios.get(`http://localhost:300/foodItems/getFoodItem/${selectedCategoryId}`).then(response => {\n        setFoodItems(response.data);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Error fetching food items!', error);\n        setError('Failed to load food items.');\n        setLoading(false);\n      });\n    }\n  }, [selectedCategoryId]);\n  const loadFoodItems = () => {\n    setLoading(true);\n    axios.get(`http://localhost:300/foodItems/getFoodItem/${selectedCategoryId}`).then(response => {\n      setFoodItems(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching food items!', error);\n      setError('Failed to load food items.');\n      setLoading(false);\n    });\n  };\n\n  // Fetch all food items based on restaurant ID\n  const fetchAllFoodItemsByRestaurant = () => {\n    console.log('Function called');\n    if (selectedRestaurantId) {\n      setLoading(true);\n      axios.get(`http://localhost:300/foodItems/getFoodItems/${selectedRestaurantId}`).then(response => {\n        setAllFoodItems(response.data);\n        setFoodItems(response.data);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Error fetching all food items!', error);\n        setError('Failed to load all food items.');\n        setLoading(false);\n      });\n    }\n  };\n\n  // Handle food item changes\n  const handleFoodItemChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewFoodItem(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleImageChange = e => {\n    if (!validateAddFoodItem) return;\n    setNewFoodItem(prev => ({\n      ...prev,\n      foodItemImage: e.target.files[0]\n    }));\n  };\n  const validateEditFoodItem = () => {\n    const newErrors = {};\n    const {\n      foodItemName,\n      description,\n      price\n    } = updatedFoodItem;\n    const alphabetRegex = /^[A-Za-z\\s]+$/;\n    const trimmedFoodItemName = foodItemName.trim();\n    const trimmedDescription = description.trim();\n\n    // Validate foodItemName\n    if (!trimmedFoodItemName) {\n      newErrors.foodItemName = \"Food item name is required\";\n    } else if (!alphabetRegex.test(trimmedFoodItemName)) {\n      newErrors.foodItemName = \"Food item name must contain only alphabets and cannot include numbers\";\n    } else if (!/^[A-Za-z]+$/.test(trimmedFoodItemName.replace(/\\s+/g, ''))) {\n      newErrors.foodItemName = \"Food item name should only contain alphabets\";\n    }\n\n    // Validate description\n    if (!trimmedDescription) {\n      newErrors.trimmedDescription = \"Description is required\";\n    }\n\n    // Validate price\n    if (!price) {\n      newErrors.price = \"Price is required\";\n    } else if (isNaN(updatedFoodItem.price) || updatedFoodItem.price <= 0) {\n      newErrors.price = \"Price must be a valid positive number\";\n    }\n\n    // if(!newFoodItem.isAvailable){\n    //   newErrors.isAvailable = \"Please tick the checkbox\";\n    // }\n\n    if (!updatedFoodItem.foodItemImage) {\n      newErrors.foodItemImage = \"Please upload image\";\n    }\n    setEditErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const validateAddFoodItem = () => {\n    const newErrors = {};\n    const {\n      foodItemName,\n      description,\n      price\n    } = newFoodItem;\n    const alphabetRegex = /^[A-Za-z\\s]+$/;\n    const trimmedFoodItemName = foodItemName.trim();\n    const trimmedDescription = description.trim();\n\n    // Validate foodItemName\n    if (!trimmedFoodItemName) {\n      newErrors.trimmedFoodItemName = \"Food item name is required\";\n    } else if (!alphabetRegex.test(newFoodItem.trimmedFoodItemName)) {\n      newErrors.trimmedFoodItemName = \"Food item name should only contain alphabets\";\n    }\n\n    // Validate description\n    if (!trimmedDescription) {\n      newErrors.trimmedDescription = \"Description is required\";\n    }\n\n    // Validate price\n    if (!price) {\n      newErrors.price = \"Price is required\";\n    } else if (isNaN(newFoodItem.price) || newFoodItem.price <= 0) {\n      newErrors.price = \"Price must be a valid positive number\";\n    }\n\n    // if(!newFoodItem.isAvailable){\n    //   newErrors.isAvailable = \"Please tick the checkbox\";\n    // }\n\n    if (!newFoodItem.foodItemImage) {\n      newErrors.foodItemImage = \"Please upload image\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0; // If there are no errors, return true\n  };\n  const handleAddFoodItem = e => {\n    e.preventDefault();\n\n    // Run validation and if it fails, return early\n    if (!validateAddFoodItem()) {\n      return;\n    }\n\n    // Proceed with form submission only if validation passes\n    const formData = new FormData();\n    formData.append('foodItemName', newFoodItem.foodItemName.trim());\n    formData.append('description', newFoodItem.description.trim());\n    formData.append('price', newFoodItem.price);\n    //formData.append('isAvailable', newFoodItem.isAvailable);\n    formData.append('foodCategoryId', selectedCategoryId);\n    formData.append('restaurantId', selectedRestaurantId);\n    formData.append('foodItemImage', newFoodItem.foodItemImage);\n    axios.post('http://localhost:300/foodItems/addFoodItem', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setFoodItems([...foodItems, response.data]);\n      setNewFoodItem({\n        foodItemName: '',\n        description: '',\n        price: '',\n        //isAvailable: false,\n        foodItemImage: null\n      });\n      fetchAllFoodItemsByRestaurant();\n      setError(null);\n      setShowAddFoodItemForm(false); // Hide form after adding food item\n      toast.success(response.data.message);\n    }).catch(error => {\n      console.log(error);\n      const errors = error.response.data.message;\n      // Object.keys(errors).forEach((field) => {\n      //   toast.error(errors[field]);\n      // });\n      toast.error(errors);\n      console.error('Error adding food item!', error);\n      setError('Failed to add food item.');\n    });\n  };\n  const handleEditFoodItem = foodItem => {\n    console.log(\"edit modal opened\");\n    if (!validateAddFoodItem) return;\n    setEditingFoodItem(foodItem);\n    setUpdatedFoodItem({\n      foodItemName: foodItem.foodItemName,\n      description: foodItem.description,\n      price: foodItem.price,\n      foodItemImage: null\n    });\n  };\n  const handleUpdateFoodItemChange = e => {\n    // if(!validateAddFoodItem)\n    // return;\n    setEditErrors({});\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedFoodItem(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleUpdateImageChange = e => {\n    setUpdatedFoodItem(prev => ({\n      ...prev,\n      foodItemImage: e.target.files[0]\n    }));\n  };\n  const handleUpdateFoodItem = e => {\n    e.preventDefault();\n    if (!validateEditFoodItem()) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append('foodItemName', updatedFoodItem.foodItemName.trim());\n    formData.append('description', updatedFoodItem.description.trim());\n    formData.append('price', updatedFoodItem.price);\n    if (updatedFoodItem.foodItemImage) {\n      formData.append('foodItemImage', updatedFoodItem.foodItemImage);\n    }\n    axios.put(`http://localhost:300/foodItems/updateFoodItem/${editingFoodItem.foodItemId}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log(response);\n      const updatedFoodItems = foodItems.map(item => item.foodItemId === editingFoodItem.foodItemId ? {\n        ...item,\n        ...updatedFoodItem\n      } : item);\n      setFoodItems(updatedFoodItems);\n      setEditingFoodItem(null);\n      setError(null);\n      // loadFoodItems();\n      console.log('Before calling function');\n      fetchAllFoodItemsByRestaurant();\n      console.log('After calling function');\n      toast.success(response.data.message);\n    }).catch(error => {\n      const errors = error.response.data.errors;\n      Object.keys(errors).forEach(field => {\n        //toast.error(errors[field]);\n      });\n      console.error('Error updating food item!', error);\n      setError('Failed to update food item.');\n    });\n  };\n  const fetchFoodItemImage = id => {\n    return `http://localhost:300/foodItems/${id}/image`; // Image URL for food items\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-food-item-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"View and Add Food Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"restaurant\",\n        children: \"Select Restaurant:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"restaurant\",\n        value: selectedRestaurantId,\n        onChange: e => {\n          setSelectedRestaurantId(e.target.value);\n          setSelectedCategoryId('');\n          setCategories([]);\n          setFoodItems([]);\n          setAllFoodItems([]);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Restaurant --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: restaurant.restaurantId,\n          children: restaurant.restaurantName\n        }, restaurant.restaurantId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), selectedRestaurantId && categories.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Select Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"category\",\n        value: selectedCategoryId,\n        onChange: e => {\n          setSelectedCategoryId(e.target.value);\n          setFoodItems([]);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Category --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.foodCategoryId,\n          children: category.foodCategoryName\n        }, category.foodCategoryId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }, this), selectedRestaurantId && categories.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No categories available for the selected restaurant.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }, this), selectedRestaurantId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fetch-food-items\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchAllFoodItemsByRestaurant,\n        children: \"View All Food Items by Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }, this), allFoodItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-food-items-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Food Items for Selected Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: allFoodItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: fetchFoodItemImage(item.foodItemId),\n            alt: item.foodItemName,\n            className: \"food-item-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: item.foodItemName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 17\n          }, this), \" - \", item.description, \" - Rs\", item.price]\n        }, item.foodItemId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }, this), selectedCategoryId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-items-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Food Items for Selected Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this), foodItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: foodItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: fetchFoodItemImage(item.foodItemId),\n            alt: item.foodItemName,\n            className: \"food-item-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: item.foodItemName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 19\n          }, this), \" - \", item.description, \" - Rs\", item.price, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditFoodItem(item),\n            children: \"Edit Food Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 19\n          }, this)]\n        }, item.foodItemId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No food items available for this category.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }, this), selectedCategoryId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-add-food-item\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAddFoodItemForm(prev => !prev),\n        children: showAddFoodItemForm ? 'Cancel Adding Food Item' : 'Add Food Item'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }, this), showAddFoodItemForm && selectedCategoryId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-food-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Food Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddFoodItem,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Food Item Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"foodItemName\",\n            value: newFoodItem.foodItemName,\n            onChange: handleFoodItemChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this), errors.trimmedFoodItemName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.trimmedFoodItemName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Description \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            value: newFoodItem.description,\n            onChange: handleFoodItemChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this), errors.trimmedDescription && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.trimmedDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Price \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"price\",\n            value: newFoodItem.price,\n            onChange: handleFoodItemChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this), errors.price && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Upload Food Item Image \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"foodItemImage\",\n            onChange: handleImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this), errors.foodItemImage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.foodItemImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Food Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 9\n    }, this), editingFoodItem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-food-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Food Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdateFoodItem,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Food Item Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 37\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"foodItemName\",\n            value: updatedFoodItem.foodItemName,\n            onChange: handleUpdateFoodItemChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), editErrors.trimmedFoodItemName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: editErrors.trimmedFoodItemName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Description \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 34\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            value: updatedFoodItem.description,\n            onChange: handleUpdateFoodItemChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this), editErrors.trimmedDescription && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: editErrors.trimmedDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Price \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 28\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"price\",\n            value: updatedFoodItem.price,\n            onChange: handleUpdateFoodItemChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this), editErrors.price && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: editErrors.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Upload New Food Item Image (optional):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"foodItemImage\",\n            onChange: handleUpdateImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this), editErrors.foodItemImage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: editErrors.foodItemImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update Food Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setEditingFoodItem(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewFoodItem, \"sCwPztsFUq8UOQlcSgnbqGzhozM=\");\n_c = ViewFoodItem;\nexport default ViewFoodItem;\nvar _c;\n$RefreshReg$(_c, \"ViewFoodItem\");","map":{"version":3,"names":["React","useState","useEffect","axios","toast","ToastContainer","jsxDEV","_jsxDEV","ViewFoodItem","_s","restaurants","setRestaurants","categories","setCategories","foodItems","setFoodItems","allFoodItems","setAllFoodItems","selectedRestaurantId","setSelectedRestaurantId","selectedCategoryId","setSelectedCategoryId","error","setError","errors","setErrors","loading","setLoading","showAddFoodItemForm","setShowAddFoodItemForm","editErrors","setEditErrors","newFoodItem","setNewFoodItem","foodItemName","description","price","foodItemImage","editingFoodItem","setEditingFoodItem","updatedFoodItem","setUpdatedFoodItem","userId","localStorage","getItem","get","then","response","data","catch","console","loadFoodItems","fetchAllFoodItemsByRestaurant","log","handleFoodItemChange","e","name","value","target","prev","handleImageChange","validateAddFoodItem","files","validateEditFoodItem","newErrors","alphabetRegex","trimmedFoodItemName","trim","trimmedDescription","test","replace","isNaN","Object","keys","length","handleAddFoodItem","preventDefault","formData","FormData","append","post","headers","success","message","handleEditFoodItem","foodItem","handleUpdateFoodItemChange","handleUpdateImageChange","handleUpdateFoodItem","put","foodItemId","updatedFoodItems","map","item","forEach","field","fetchFoodItemImage","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","restaurant","restaurantId","restaurantName","category","foodCategoryId","foodCategoryName","onClick","src","alt","onSubmit","style","color","type","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactJs/restaurant-orders-portal-frontened/src/components/ViewFoodItem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ViewFoodItem.css';\nimport { toast, ToastContainer } from 'react-toastify';\n\nconst ViewFoodItem = () => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [foodItems, setFoodItems] = useState([]);\n  const [allFoodItems, setAllFoodItems] = useState([]);\n  const [selectedRestaurantId, setSelectedRestaurantId] = useState('');\n  const [selectedCategoryId, setSelectedCategoryId] = useState('');\n  const [error, setError] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [showAddFoodItemForm, setShowAddFoodItemForm] = useState(false);\n\n  const [editErrors, setEditErrors] = useState({});\n\n\n  const [newFoodItem, setNewFoodItem] = useState({\n    foodItemName: '',\n    description: '',\n    price: '',\n    //isAvailable: false,\n    foodItemImage: null,\n  });\n  const [editingFoodItem, setEditingFoodItem] = useState(null);\n  const [updatedFoodItem, setUpdatedFoodItem] = useState({\n    foodItemName: '',\n    description: '',\n    price: '',\n    foodItemImage: null,\n  });\n  const userId = localStorage.getItem('userId');\n\n  // Fetch restaurants based on user ID\n  useEffect(() => {\n    if (userId) {\n      setLoading(true);\n      axios\n        .get(`http://localhost:300/restaurant/restaurants/${userId}`)\n        .then((response) => {\n          setRestaurants(response.data);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error('Error fetching restaurants!', error);\n          setError('Failed to load restaurants.');\n          setLoading(false);\n        });\n    }\n  }, [userId]);\n\n  // Fetch categories based on selected restaurant ID\n  useEffect(() => {\n    if (selectedRestaurantId) {\n      setLoading(true);\n      axios\n        .get(`http://localhost:300/categories/foodCategory/${selectedRestaurantId}`)\n        .then((response) => {\n          setCategories(response.data);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error('Error fetching categories!', error);\n          setError('Failed to load categories.');\n          setLoading(false);\n        });\n    }\n  }, [selectedRestaurantId]);\n\n  // Fetch food items based on selected category ID\n  useEffect(() => {\n    if (selectedCategoryId) {\n      setLoading(true);\n      axios\n        .get(`http://localhost:300/foodItems/getFoodItem/${selectedCategoryId}`)\n        .then((response) => {\n          setFoodItems(response.data);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error('Error fetching food items!', error);\n          setError('Failed to load food items.');\n          setLoading(false);\n        });\n    }\n  }, [selectedCategoryId]);\n\n  const loadFoodItems = () => {\n    setLoading(true);\n    axios\n      .get(`http://localhost:300/foodItems/getFoodItem/${selectedCategoryId}`)\n      .then((response) => {\n        setFoodItems(response.data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching food items!', error);\n        setError('Failed to load food items.');\n        setLoading(false);\n      });\n  }\n\n  // Fetch all food items based on restaurant ID\n  const fetchAllFoodItemsByRestaurant = () => {\n    console.log('Function called');\n    \n    if (selectedRestaurantId) {\n      setLoading(true);\n      axios\n        .get(`http://localhost:300/foodItems/getFoodItems/${selectedRestaurantId}`)\n        .then((response) => {\n          setAllFoodItems(response.data);\n          setFoodItems(response.data);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error('Error fetching all food items!', error);\n          setError('Failed to load all food items.');\n          setLoading(false);\n        });\n    }\n  };\n\n  // Handle food item changes\n  const handleFoodItemChange = (e) => {\n    const { name, value } = e.target;\n    setNewFoodItem((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n\n  const handleImageChange = (e) => {\n\n    if (!validateAddFoodItem)\n      return;\n    setNewFoodItem((prev) => ({\n      ...prev,\n      foodItemImage: e.target.files[0],\n    }));\n  };\n\n  const validateEditFoodItem = () => {\n    const newErrors = {};\n    const { foodItemName, description, price, } = updatedFoodItem;\n    const alphabetRegex = /^[A-Za-z\\s]+$/;\n    const trimmedFoodItemName = foodItemName.trim();\n    const trimmedDescription = description.trim();\n\n\n     // Validate foodItemName\n  if (!trimmedFoodItemName) {\n    newErrors.foodItemName = \"Food item name is required\";\n  } else if (!alphabetRegex.test(trimmedFoodItemName)) {\n    newErrors.foodItemName = \"Food item name must contain only alphabets and cannot include numbers\";\n  } else if (!/^[A-Za-z]+$/.test(trimmedFoodItemName.replace(/\\s+/g, ''))) {\n    newErrors.foodItemName = \"Food item name should only contain alphabets\";\n  }\n\n    // Validate description\n    if (!trimmedDescription) {\n      newErrors.trimmedDescription = \"Description is required\";\n    }\n\n    // Validate price\n    if (!price) {\n      newErrors.price = \"Price is required\";\n    } else if (isNaN(updatedFoodItem.price) || updatedFoodItem.price <= 0) {\n      newErrors.price = \"Price must be a valid positive number\";\n    }\n\n    // if(!newFoodItem.isAvailable){\n    //   newErrors.isAvailable = \"Please tick the checkbox\";\n    // }\n\n    if (!updatedFoodItem.foodItemImage) {\n      newErrors.foodItemImage = \"Please upload image\";\n    }\n    setEditErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  }\n\n  const validateAddFoodItem = () => {\n    const newErrors = {};\n    const { foodItemName, description, price, } = newFoodItem;\n    const alphabetRegex = /^[A-Za-z\\s]+$/;\n    const trimmedFoodItemName = foodItemName.trim();\n    const trimmedDescription = description.trim();\n\n    // Validate foodItemName\n    if (!trimmedFoodItemName) {\n      newErrors.trimmedFoodItemName = \"Food item name is required\";\n    } else if (!alphabetRegex.test(newFoodItem.trimmedFoodItemName)) {\n      newErrors.trimmedFoodItemName = \"Food item name should only contain alphabets\";\n    }\n\n    // Validate description\n    if (!trimmedDescription) {\n      newErrors.trimmedDescription = \"Description is required\";\n    }\n\n    // Validate price\n    if (!price) {\n      newErrors.price = \"Price is required\";\n    } else if (isNaN(newFoodItem.price) || newFoodItem.price <= 0) {\n      newErrors.price = \"Price must be a valid positive number\";\n    }\n\n    // if(!newFoodItem.isAvailable){\n    //   newErrors.isAvailable = \"Please tick the checkbox\";\n    // }\n\n    if (!newFoodItem.foodItemImage) {\n      newErrors.foodItemImage = \"Please upload image\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0; // If there are no errors, return true\n  };\n\n  const handleAddFoodItem = (e) => {\n    e.preventDefault();\n\n    // Run validation and if it fails, return early\n    if (!validateAddFoodItem()) {\n      return;\n    }\n\n    // Proceed with form submission only if validation passes\n    const formData = new FormData();\n    formData.append('foodItemName', newFoodItem.foodItemName.trim());\n    formData.append('description', newFoodItem.description.trim());\n    formData.append('price', newFoodItem.price);\n    //formData.append('isAvailable', newFoodItem.isAvailable);\n    formData.append('foodCategoryId', selectedCategoryId);\n    formData.append('restaurantId', selectedRestaurantId);\n    formData.append('foodItemImage', newFoodItem.foodItemImage);\n\n    axios\n      .post('http://localhost:300/foodItems/addFoodItem', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then((response) => {\n        setFoodItems([...foodItems, response.data]);\n        setNewFoodItem({\n          foodItemName: '',\n          description: '',\n          price: '',\n          //isAvailable: false,\n          foodItemImage: null,\n        });\n        fetchAllFoodItemsByRestaurant();\n        setError(null);\n        setShowAddFoodItemForm(false); // Hide form after adding food item\n        toast.success(response.data.message);\n      })\n      .catch((error) => {\n        console.log(error)\n        const errors = error.response.data.message;\n        // Object.keys(errors).forEach((field) => {\n        //   toast.error(errors[field]);\n        // });\n      toast.error(errors)\n        console.error('Error adding food item!', error);\n        setError('Failed to add food item.');\n      });\n  };\n\n  const handleEditFoodItem = (foodItem) => {\n    console.log(\"edit modal opened\");\n    if (!validateAddFoodItem)\n      return;\n    setEditingFoodItem(foodItem);\n    setUpdatedFoodItem({\n      foodItemName: foodItem.foodItemName,\n      description: foodItem.description,\n      price: foodItem.price,\n      foodItemImage: null,\n    });\n  };\n\n  const handleUpdateFoodItemChange = (e) => {\n    // if(!validateAddFoodItem)\n    // return;\n    setEditErrors({})\n    const { name, value } = e.target;\n    setUpdatedFoodItem((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleUpdateImageChange = (e) => {\n    setUpdatedFoodItem((prev) => ({\n      ...prev,\n      foodItemImage: e.target.files[0],\n    }));\n  };\n\n  const handleUpdateFoodItem = (e) => {\n\n    e.preventDefault();\n\n    if (!validateEditFoodItem()) {\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('foodItemName', updatedFoodItem.foodItemName.trim());\n    formData.append('description', updatedFoodItem.description.trim());\n    formData.append('price', updatedFoodItem.price);\n    if (updatedFoodItem.foodItemImage) {\n      formData.append('foodItemImage', updatedFoodItem.foodItemImage);\n    }\n\n    axios\n      .put(`http://localhost:300/foodItems/updateFoodItem/${editingFoodItem.foodItemId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then((response) => {\n        console.log(response);\n        \n        const updatedFoodItems = foodItems.map((item) =>\n          item.foodItemId === editingFoodItem.foodItemId ? { ...item, ...updatedFoodItem } : item\n        );\n        setFoodItems(updatedFoodItems);\n        \n        setEditingFoodItem(null);\n        setError(null);\n        // loadFoodItems();\n        console.log('Before calling function');\n        fetchAllFoodItemsByRestaurant();\n        console.log('After calling function');\n\n        toast.success(response.data.message)\n      })\n     \n      .catch((error) => {\n        const errors = error.response.data.errors;\n        Object.keys(errors).forEach((field) => {\n          //toast.error(errors[field]);\n        });\n        console.error('Error updating food item!', error);\n        setError('Failed to update food item.');\n      });  \n  };\n\n  \n  const fetchFoodItemImage = (id) => {\n    return `http://localhost:300/foodItems/${id}/image`; // Image URL for food items\n  };\n\n\n\n  return (\n    <div className=\"view-food-item-container\">\n      <h2>View and Add Food Items</h2>\n\n      {loading && <p>Loading...</p>}\n\n      {/* Restaurant Dropdown */}\n      <div className=\"dropdown\">\n        <label htmlFor=\"restaurant\">Select Restaurant:</label>\n        <select\n          id=\"restaurant\"\n          value={selectedRestaurantId}\n          onChange={(e) => {\n            setSelectedRestaurantId(e.target.value);\n            setSelectedCategoryId('');\n            setCategories([]);\n            setFoodItems([]);\n            setAllFoodItems([]);\n          }}\n        >\n          <option value=\"\">-- Select Restaurant --</option>\n          {restaurants.map((restaurant) => (\n            <option key={restaurant.restaurantId} value={restaurant.restaurantId}>\n              {restaurant.restaurantName}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Category Dropdown */}\n      {selectedRestaurantId && categories.length > 0 && (\n        <div className=\"dropdown\">\n          <label htmlFor=\"category\">Select Category:</label>\n          <select\n            id=\"category\"\n            value={selectedCategoryId}\n            onChange={(e) => {\n              setSelectedCategoryId(e.target.value);\n              setFoodItems([]);\n            }}\n          >\n            <option value=\"\">-- Select Category --</option>\n            {categories.map((category) => (\n              <option key={category.foodCategoryId} value={category.foodCategoryId}>\n                {category.foodCategoryName}\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n\n      {/* No Categories Message */}\n      {selectedRestaurantId && categories.length === 0 && !loading && (\n        <p>No categories available for the selected restaurant.</p>\n      )}\n      \n      {/* Fetch All Food Items Button */}\n      {selectedRestaurantId && (\n        <div className=\"fetch-food-items\">\n          <button onClick={fetchAllFoodItemsByRestaurant}>View All Food Items by Restaurant</button>\n        </div>\n      )}\n\n      {/* Display All Food Items for Restaurant */}\n      {allFoodItems.length > 0 && (\n        <div className=\"all-food-items-list\">\n          <h3>All Food Items for Selected Restaurant</h3>\n          <ul>\n            {allFoodItems.map((item) => (\n              <li key={item.foodItemId}>\n                <img\n                  src={fetchFoodItemImage(item.foodItemId)}\n                  alt={item.foodItemName}\n                  className=\"food-item-image\"\n                />\n                <strong>{item.foodItemName}</strong> - {item.description} - Rs{item.price}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {/* Food Items List for Selected Category */}\n      {selectedCategoryId && (\n        <div className=\"food-items-list\">\n          <h3>Food Items for Selected Category</h3>\n          {foodItems.length > 0 ? (\n            <ul>\n              {foodItems.map((item) => (\n                <li key={item.foodItemId}>\n                  <img\n                    src={fetchFoodItemImage(item.foodItemId)}\n                    alt={item.foodItemName}\n                    className=\"food-item-image\"\n                  />\n                  <strong>{item.foodItemName}</strong> - {item.description} - Rs{item.price}\n                  <button onClick={() => handleEditFoodItem(item)}>Edit Food Item</button>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>\n              No food items available for this category.\n            </p>\n          )}\n        </div>\n      )}\n\n      {/* Toggle Button for Add Food Item Form */}\n      {selectedCategoryId && (\n        <div className=\"toggle-add-food-item\">\n          <button onClick={() => setShowAddFoodItemForm((prev) => !prev)}>\n            {showAddFoodItemForm ? 'Cancel Adding Food Item' : 'Add Food Item'}\n          </button>\n        </div>\n      )}\n\n      {/* Add Food Item Form */}\n      {showAddFoodItemForm && selectedCategoryId && (\n        <div className=\"add-food-item\">\n          <h3>Add New Food Item</h3>\n          <form onSubmit={handleAddFoodItem}>\n            <div>\n              <label>\n                Food Item Name <span style={{ color: 'red' }}>*</span>\n              </label>\n              <input\n                type=\"text\"\n                name=\"foodItemName\"\n                value={newFoodItem.foodItemName}\n                onChange={handleFoodItemChange}\n\n              />\n              {errors.trimmedFoodItemName && <p className=\"error\">{errors.trimmedFoodItemName}</p>}\n            </div>\n\n            <div>\n              <label>\n                Description <span style={{ color: 'red' }}>*</span>\n              </label>\n              <textarea\n                name=\"description\"\n                value={newFoodItem.description}\n                onChange={handleFoodItemChange}\n\n              ></textarea>\n              {errors.trimmedDescription && <p className=\"error\">{errors.trimmedDescription}</p>}\n            </div>\n\n            <div>\n              <label>\n                Price <span style={{ color: 'red' }}>*</span>\n              </label>\n              <input\n                type=\"number\"\n                name=\"price\"\n                value={newFoodItem.price}\n                onChange={handleFoodItemChange}\n\n              />\n              {errors.price && <p className=\"error\">{errors.price}</p>}\n            </div>\n\n            <div>\n              <label>\n                Upload Food Item Image <span style={{ color: 'red' }}>*</span>\n              </label>\n              <input type=\"file\" name=\"foodItemImage\" onChange={handleImageChange} />\n              {errors.foodItemImage && <p className=\"error\">{errors.foodItemImage}</p>}\n            </div>\n\n            <div>\n              <button type=\"submit\">Add Food Item</button>\n            </div>\n          </form>\n        </div>\n      )}\n      {editingFoodItem && (\n        <div className=\"edit-food-item\">\n          <h3>Edit Food Item</h3>\n          <form onSubmit={handleUpdateFoodItem}>\n            <div>\n              <label>Food Item Name <span style={{ color: 'red' }}>*</span> </label>\n              <input\n                type=\"text\"\n                name=\"foodItemName\"\n                value={updatedFoodItem.foodItemName}\n                onChange={handleUpdateFoodItemChange}\n              />\n              {editErrors.trimmedFoodItemName && <p className=\"error\">{editErrors.trimmedFoodItemName}</p>}\n            </div>\n            <div>\n              <label>Description <span style={{ color: 'red' }}>*</span> </label>\n              <textarea\n                name=\"description\"\n                value={updatedFoodItem.description}\n                onChange={handleUpdateFoodItemChange}\n\n              ></textarea>\n              {editErrors.trimmedDescription && <p className=\"error\">{editErrors.trimmedDescription}</p>}\n            </div>\n            <div>\n              <label>Price <span style={{ color: 'red' }}>*</span> </label>\n              <input\n                type=\"number\"\n                name=\"price\"\n                value={updatedFoodItem.price}\n                onChange={handleUpdateFoodItemChange}\n              />\n              {editErrors.price && <p className=\"error\">{editErrors.price}</p>}\n            </div>\n            <div>\n              <label>Upload New Food Item Image (optional):</label>\n              <input type=\"file\" name=\"foodItemImage\" onChange={handleUpdateImageChange} />\n              {editErrors.foodItemImage && <p className=\"error\">{editErrors.foodItemImage}</p>}\n            </div>\n            <div>\n              <button type=\"submit\">Update Food Item</button>\n              <button type=\"button\" onClick={() => setEditingFoodItem(null)}>Cancel</button>\n            </div>\n          </form>\n        </div>\n      )}\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default ViewFoodItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
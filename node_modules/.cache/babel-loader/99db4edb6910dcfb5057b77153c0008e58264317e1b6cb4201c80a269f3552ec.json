{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactJs\\\\restaurant-orders-portal-frontened\\\\src\\\\components\\\\RestaurantDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport './RestaurantDetails.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RestaurantDetails = () => {\n  _s();\n  const {\n    restaurantId\n  } = useParams(); // Get restaurantId from the URL params\n  const [restaurant, setRestaurant] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategoryId, setSelectedCategoryId] = useState(''); // For the category dropdown\n  const [foodItems, setFoodItems] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch restaurant details by restaurantId\n    fetch(`http://localhost:300/restaurant/getRestaurant/${restaurantId}`).then(response => response.json()).then(data => setRestaurant(data)).catch(error => console.error('Error fetching restaurant details:', error));\n\n    // Fetch food categories by restaurantId\n    fetch(`http://localhost:300/categories/foodCategory/${restaurantId}`).then(response => response.json()).then(data => setCategories(data)).catch(error => console.error('Error fetching categories:', error));\n  }, [restaurantId]);\n\n  // Fetch food items based on the selected category\n  useEffect(() => {\n    if (selectedCategoryId) {\n      fetch(`http://localhost:300/foodItems/getFoodItemsByCategory/${selectedCategoryId}`).then(response => response.json()).then(data => setFoodItems(data)).catch(error => console.error('Error fetching food items:', error));\n    }\n  }, [selectedCategoryId]);\n  const handleAddToCart = (foodItemId, price) => {\n    const userId = localStorage.getItem('userId'); // Replace with actual user ID from authentication context or state\n\n    fetch('http://localhost:200/cart/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId,\n        restaurantId,\n        foodItemId,\n        quantity: 1,\n        price\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Item added to cart:', data);\n    }).catch(error => console.error('Error adding item to cart:', error));\n  };\n  const handleViewCart = () => {\n    const userId = localStorage.getItem('userId');\n    if (userId == null) {\n      alert('User needs to log in');\n    } else {\n      navigate(`/cart/user/${userId}/restaurant/${restaurantId}`);\n    }\n  };\n  if (!restaurant) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restaurant-details\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: restaurant.restaurantName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `data:image/jpeg;base64,${restaurant.restaurantImage}`,\n      alt: restaurant.restaurantName,\n      className: \"restaurant-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Location: \", restaurant.restaurantAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Contact: \", restaurant.contactNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", restaurant.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Food Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategoryId,\n        onChange: e => setSelectedCategoryId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.foodCategoryId,\n          children: category.foodCategoryName\n        }, category.foodCategoryId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), selectedCategoryId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Food Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: foodItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:300/foodItems/${item.foodItemId}/image`,\n            alt: item.foodItemName,\n            className: \"food-item-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), item.foodItemName, \" - Rs. \", item.price, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddToCart(item.foodItemId, item.price),\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, item.foodItemId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleViewCart,\n      children: \"View Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantDetails, \"oXBgVbYh/WNNXNl55Pif0E2qR38=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RestaurantDetails;\nexport default RestaurantDetails;\nvar _c;\n$RefreshReg$(_c, \"RestaurantDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","RestaurantDetails","_s","restaurantId","restaurant","setRestaurant","categories","setCategories","selectedCategoryId","setSelectedCategoryId","foodItems","setFoodItems","navigate","fetch","then","response","json","data","catch","error","console","handleAddToCart","foodItemId","price","userId","localStorage","getItem","method","headers","body","JSON","stringify","quantity","log","handleViewCart","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","restaurantName","src","restaurantImage","alt","restaurantAddress","contactNumber","description","value","onChange","e","target","map","category","foodCategoryId","foodCategoryName","item","foodItemName","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactJs/restaurant-orders-portal-frontened/src/components/RestaurantDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport './RestaurantDetails.css';\n\nconst RestaurantDetails = () => {\n  const { restaurantId } = useParams(); // Get restaurantId from the URL params\n  const [restaurant, setRestaurant] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategoryId, setSelectedCategoryId] = useState(''); // For the category dropdown\n  const [foodItems, setFoodItems] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Fetch restaurant details by restaurantId\n    fetch(`http://localhost:300/restaurant/getRestaurant/${restaurantId}`)\n      .then((response) => response.json())\n      .then((data) => setRestaurant(data))\n      .catch((error) => console.error('Error fetching restaurant details:', error));\n\n    // Fetch food categories by restaurantId\n    fetch(`http://localhost:300/categories/foodCategory/${restaurantId}`)\n      .then((response) => response.json())\n      .then((data) => setCategories(data))\n      .catch((error) => console.error('Error fetching categories:', error));\n  }, [restaurantId]);\n\n  // Fetch food items based on the selected category\n  useEffect(() => {\n    if (selectedCategoryId) {\n      fetch(`http://localhost:300/foodItems/getFoodItemsByCategory/${selectedCategoryId}`)\n        .then((response) => response.json())\n        .then((data) => setFoodItems(data))\n        .catch((error) => console.error('Error fetching food items:', error));\n    }\n  }, [selectedCategoryId]);\n\n  const handleAddToCart = (foodItemId, price) => {\n    const userId = localStorage.getItem('userId'); // Replace with actual user ID from authentication context or state\n\n    fetch('http://localhost:200/cart/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        userId,\n        restaurantId,\n        foodItemId,\n        quantity: 1,\n        price,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Item added to cart:', data);\n      })\n      .catch((error) => console.error('Error adding item to cart:', error));\n  };\n\n  const handleViewCart = () => {\n    const userId = localStorage.getItem('userId');\n    if (userId == null) {\n      alert('User needs to log in');\n    } else {\n      navigate(`/cart/user/${userId}/restaurant/${restaurantId}`);\n    }\n  };\n\n  if (!restaurant) return <p>Loading...</p>;\n\n  return (\n    <div className=\"restaurant-details\">\n      <Navbar />\n      <h2>{restaurant.restaurantName}</h2>\n      <img\n        src={`data:image/jpeg;base64,${restaurant.restaurantImage}`}\n        alt={restaurant.restaurantName}\n        className=\"restaurant-image\"\n      />\n      <p>Location: {restaurant.restaurantAddress}</p>\n      <p>Contact: {restaurant.contactNumber}</p>\n      <p>Description: {restaurant.description}</p>\n\n      <h3>Food Categories</h3>\n      <div className=\"category-dropdown\">\n        <select\n          value={selectedCategoryId}\n          onChange={(e) => setSelectedCategoryId(e.target.value)}\n        >\n          <option value=\"\">Select a category</option>\n          {categories.map((category) => (\n            <option key={category.foodCategoryId} value={category.foodCategoryId}>\n              {category.foodCategoryName}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {selectedCategoryId && (\n        <>\n          <h3>Food Items</h3>\n          <ul>\n            {foodItems.map((item) => (\n              <li key={item.foodItemId}>\n                <img\n                  src={`http://localhost:300/foodItems/${item.foodItemId}/image`}\n                  alt={item.foodItemName}\n                  className=\"food-item-image\"\n                />\n                {item.foodItemName} - Rs. {item.price}\n                <button onClick={() => handleAddToCart(item.foodItemId, item.price)}>\n                  Add to Cart\n                </button>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n\n      <button onClick={handleViewCart}>View Cart</button>\n    </div>\n  );\n};\n\nexport default RestaurantDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAa,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClE,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMmB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd;IACAqB,KAAK,CAAC,iDAAiDV,YAAY,EAAE,CAAC,CACnEW,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKZ,aAAa,CAACY,IAAI,CAAC,CAAC,CACnCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC,CAAC;;IAE/E;IACAN,KAAK,CAAC,gDAAgDV,YAAY,EAAE,CAAC,CAClEW,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKV,aAAa,CAACU,IAAI,CAAC,CAAC,CACnCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,CAAChB,YAAY,CAAC,CAAC;;EAElB;EACAX,SAAS,CAAC,MAAM;IACd,IAAIgB,kBAAkB,EAAE;MACtBK,KAAK,CAAC,yDAAyDL,kBAAkB,EAAE,CAAC,CACjFM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKN,YAAY,CAACM,IAAI,CAAC,CAAC,CAClCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;IACzE;EACF,CAAC,EAAE,CAACX,kBAAkB,CAAC,CAAC;EAExB,MAAMa,eAAe,GAAGA,CAACC,UAAU,EAAEC,KAAK,KAAK;IAC7C,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;IAE/Cb,KAAK,CAAC,+BAA+B,EAAE;MACrCc,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBP,MAAM;QACNrB,YAAY;QACZmB,UAAU;QACVU,QAAQ,EAAE,CAAC;QACXT;MACF,CAAC;IACH,CAAC,CAAC,CACCT,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdG,OAAO,CAACa,GAAG,CAAC,qBAAqB,EAAEhB,IAAI,CAAC;IAC1C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC;EAED,MAAMe,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMV,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,IAAIF,MAAM,IAAI,IAAI,EAAE;MAClBW,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,MAAM;MACLvB,QAAQ,CAAC,cAAcY,MAAM,eAAerB,YAAY,EAAE,CAAC;IAC7D;EACF,CAAC;EAED,IAAI,CAACC,UAAU,EAAE,oBAAON,OAAA;IAAAsC,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEzC,oBACE1C,OAAA;IAAK2C,SAAS,EAAC,oBAAoB;IAAAL,QAAA,gBACjCtC,OAAA,CAACF,MAAM;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV1C,OAAA;MAAAsC,QAAA,EAAKhC,UAAU,CAACsC;IAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpC1C,OAAA;MACE6C,GAAG,EAAE,0BAA0BvC,UAAU,CAACwC,eAAe,EAAG;MAC5DC,GAAG,EAAEzC,UAAU,CAACsC,cAAe;MAC/BD,SAAS,EAAC;IAAkB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACF1C,OAAA;MAAAsC,QAAA,GAAG,YAAU,EAAChC,UAAU,CAAC0C,iBAAiB;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/C1C,OAAA;MAAAsC,QAAA,GAAG,WAAS,EAAChC,UAAU,CAAC2C,aAAa;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C1C,OAAA;MAAAsC,QAAA,GAAG,eAAa,EAAChC,UAAU,CAAC4C,WAAW;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5C1C,OAAA;MAAAsC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB1C,OAAA;MAAK2C,SAAS,EAAC,mBAAmB;MAAAL,QAAA,eAChCtC,OAAA;QACEmD,KAAK,EAAEzC,kBAAmB;QAC1B0C,QAAQ,EAAGC,CAAC,IAAK1C,qBAAqB,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAb,QAAA,gBAEvDtC,OAAA;UAAQmD,KAAK,EAAC,EAAE;UAAAb,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC1ClC,UAAU,CAAC+C,GAAG,CAAEC,QAAQ,iBACvBxD,OAAA;UAAsCmD,KAAK,EAAEK,QAAQ,CAACC,cAAe;UAAAnB,QAAA,EAClEkB,QAAQ,CAACE;QAAgB,GADfF,QAAQ,CAACC,cAAc;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE5B,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELhC,kBAAkB,iBACjBV,OAAA,CAAAE,SAAA;MAAAoC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnB1C,OAAA;QAAAsC,QAAA,EACG1B,SAAS,CAAC2C,GAAG,CAAEI,IAAI,iBAClB3D,OAAA;UAAAsC,QAAA,gBACEtC,OAAA;YACE6C,GAAG,EAAE,kCAAkCc,IAAI,CAACnC,UAAU,QAAS;YAC/DuB,GAAG,EAAEY,IAAI,CAACC,YAAa;YACvBjB,SAAS,EAAC;UAAiB;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,EACDiB,IAAI,CAACC,YAAY,EAAC,SAAO,EAACD,IAAI,CAAClC,KAAK,eACrCzB,OAAA;YAAQ6D,OAAO,EAAEA,CAAA,KAAMtC,eAAe,CAACoC,IAAI,CAACnC,UAAU,EAAEmC,IAAI,CAAClC,KAAK,CAAE;YAAAa,QAAA,EAAC;UAErE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GATFiB,IAAI,CAACnC,UAAU;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUpB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,eACL,CACH,eAED1C,OAAA;MAAQ6D,OAAO,EAAEzB,cAAe;MAAAE,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACtC,EAAA,CAtHID,iBAAiB;EAAA,QACIP,SAAS,EAKjBC,WAAW;AAAA;AAAAiE,EAAA,GANxB3D,iBAAiB;AAwHvB,eAAeA,iBAAiB;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
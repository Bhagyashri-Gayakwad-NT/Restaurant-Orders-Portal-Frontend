{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactJs\\\\restaurant-orders-portal-frontened\\\\src\\\\components\\\\ViewAllCategories.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ViewAllCategories.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewAllCategories = ({\n  restaurantId\n}) => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [newCategoryName, setNewCategoryName] = useState('');\n  useEffect(() => {\n    if (restaurantId) {\n      fetchCategories();\n    }\n  }, [restaurantId]);\n  const fetchCategories = async () => {\n    try {\n      const response = await axios.get(`http://localhost:300/categories/foodCategoryByRestaurantId/${restaurantId}`);\n      setCategories(response.data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n  const handleAddCategory = async () => {\n    if (!restaurantId || !newCategoryName.trim()) {\n      console.error('Restaurant ID and category name are required');\n      return;\n    }\n    const newCategory = {\n      restaurantId,\n      foodCategoryName: newCategoryName\n    };\n    try {\n      const response = await axios.post('http://localhost:300/categories/addFoodCategory', newCategory);\n      setCategories([...categories, response.data]);\n      setNewCategoryName(''); // Clear the input field after adding the category\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const handleUpdateCategory = async (id, updatedCategory) => {\n    try {\n      const response = await axios.put(`http://localhost:300/categories/foodCategoryByFoodCategoryId/${id}`, updatedCategory);\n      const updatedCategories = categories.map(category => category.foodCategoryId === id ? response.data : category);\n      setCategories(updatedCategories);\n    } catch (error) {\n      console.error('Error updating category:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-all-categories-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Food Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newCategoryName,\n        onChange: e => setNewCategoryName(e.target.value),\n        placeholder: \"Add New Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categories-list\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-card\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: category.foodCategoryName,\n          onChange: e => handleUpdateCategory(category.foodCategoryId, {\n            ...category,\n            foodCategoryName: e.target.value,\n            restaurantId: category.restaurantId // Ensure restaurantId is passed when updating\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, category.foodCategoryId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(ViewAllCategories, \"HyGEmsXOEkZUxQujmzkGgt9cxOc=\");\n_c = ViewAllCategories;\nexport default ViewAllCategories;\nvar _c;\n$RefreshReg$(_c, \"ViewAllCategories\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ViewAllCategories","restaurantId","_s","categories","setCategories","newCategoryName","setNewCategoryName","fetchCategories","response","get","data","error","console","handleAddCategory","trim","newCategory","foodCategoryName","post","handleUpdateCategory","id","updatedCategory","put","updatedCategories","map","category","foodCategoryId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactJs/restaurant-orders-portal-frontened/src/components/ViewAllCategories.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ViewAllCategories.css';\r\n\r\nconst ViewAllCategories = ({ restaurantId }) => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [newCategoryName, setNewCategoryName] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (restaurantId) {\r\n            fetchCategories();\r\n        }\r\n    }, [restaurantId]);\r\n\r\n    const fetchCategories = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:300/categories/foodCategoryByRestaurantId/${restaurantId}`);\r\n            setCategories(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching categories:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddCategory = async () => {\r\n        if (!restaurantId || !newCategoryName.trim()) {\r\n            console.error('Restaurant ID and category name are required');\r\n            return;\r\n        }\r\n\r\n        const newCategory = {\r\n            restaurantId,\r\n            foodCategoryName: newCategoryName\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:300/categories/addFoodCategory', newCategory);\r\n            setCategories([...categories, response.data]);\r\n            setNewCategoryName(''); // Clear the input field after adding the category\r\n        } catch (error) {\r\n            console.error('Error adding category:', error);\r\n        }\r\n    };\r\n\r\n    const handleUpdateCategory = async (id, updatedCategory) => {\r\n        try {\r\n            const response = await axios.put(`http://localhost:300/categories/foodCategoryByFoodCategoryId/${id}`, updatedCategory);\r\n            const updatedCategories = categories.map((category) =>\r\n                category.foodCategoryId === id ? response.data : category\r\n            );\r\n            setCategories(updatedCategories);\r\n        } catch (error) {\r\n            console.error('Error updating category:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"view-all-categories-container\">\r\n            <h2>Food Categories</h2>\r\n            <div className=\"add-category\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newCategoryName}\r\n                    onChange={(e) => setNewCategoryName(e.target.value)}\r\n                    placeholder=\"Add New Category\"\r\n                />\r\n                <button onClick={handleAddCategory}>Add Category</button>\r\n            </div>\r\n            <div className=\"categories-list\">\r\n                {categories.map((category) => (\r\n                    <div key={category.foodCategoryId} className=\"category-card\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={category.foodCategoryName}\r\n                            onChange={(e) =>\r\n                                handleUpdateCategory(category.foodCategoryId, {\r\n                                    ...category,\r\n                                    foodCategoryName: e.target.value,\r\n                                    restaurantId: category.restaurantId // Ensure restaurantId is passed when updating\r\n                                })\r\n                            }\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewAllCategories;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactJs\\\\restaurant-orders-portal-frontened\\\\src\\\\components\\\\ViewAllCategories.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ViewAllCategories.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ViewAllCategories = ({\n  userId\n}) => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [selectedRestaurantId, setSelectedRestaurantId] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [newCategory, setNewCategory] = useState('');\n  useEffect(() => {\n    if (userId) {\n      fetchRestaurants();\n    }\n  }, [userId]);\n  useEffect(() => {\n    if (selectedRestaurantId) {\n      fetchCategories(selectedRestaurantId);\n    }\n  }, [selectedRestaurantId]);\n  const fetchRestaurants = async () => {\n    try {\n      const response = await axios.get(`http://localhost:300/restaurant/restaurants/${userId}`);\n      setRestaurants(response.data);\n    } catch (error) {\n      console.error('Error fetching restaurants:', error);\n    }\n  };\n  const fetchCategories = async restaurantId => {\n    try {\n      const response = await axios.get(`http://localhost:300/categories/foodCategoryByRestaurantId/${restaurantId}`);\n      setCategories(response.data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n  const handleAddCategory = async () => {\n    try {\n      const response = await axios.post('http://localhost:300/categories/addFoodCategory', {\n        restaurantId: selectedRestaurantId,\n        foodCategoryName: newCategory\n      });\n      setCategories([...categories, response.data]);\n      setNewCategory(''); // Clear the input field\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const handleUpdateCategory = async (id, updatedCategory) => {\n    try {\n      const response = await axios.put(`http://localhost:300/categories/foodCategoryByFoodCategoryId/${id}`, updatedCategory);\n      const updatedCategories = categories.map(category => category.foodCategoryId === id ? response.data : category);\n      setCategories(updatedCategories);\n    } catch (error) {\n      console.error('Error updating category:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-all-categories-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Food Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Restaurant: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedRestaurantId || '',\n        onChange: e => setSelectedRestaurantId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a restaurant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: restaurant.restaurantId,\n          children: restaurant.restaurantName\n        }, restaurant.restaurantId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), selectedRestaurantId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newCategory,\n          onChange: e => setNewCategory(e.target.value),\n          placeholder: \"Add New Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddCategory,\n          children: \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-list\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-card\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: category.foodCategoryName,\n            onChange: e => handleUpdateCategory(category.foodCategoryId, {\n              ...category,\n              foodCategoryName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this)\n        }, category.foodCategoryId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(ViewAllCategories, \"hFQTArjnlLdVVXmghqA0eJcaMpk=\");\n_c = ViewAllCategories;\nexport default ViewAllCategories;\nvar _c;\n$RefreshReg$(_c, \"ViewAllCategories\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewAllCategories","userId","_s","restaurants","setRestaurants","selectedRestaurantId","setSelectedRestaurantId","categories","setCategories","newCategory","setNewCategory","fetchRestaurants","fetchCategories","response","get","data","error","console","restaurantId","handleAddCategory","post","foodCategoryName","handleUpdateCategory","id","updatedCategory","put","updatedCategories","map","category","foodCategoryId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","disabled","restaurant","restaurantName","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactJs/restaurant-orders-portal-frontened/src/components/ViewAllCategories.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ViewAllCategories.css';\r\n\r\nconst ViewAllCategories = ({ userId }) => {\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [selectedRestaurantId, setSelectedRestaurantId] = useState(null);\r\n    const [categories, setCategories] = useState([]);\r\n    const [newCategory, setNewCategory] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            fetchRestaurants();\r\n        }\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        if (selectedRestaurantId) {\r\n            fetchCategories(selectedRestaurantId);\r\n        }\r\n    }, [selectedRestaurantId]);\r\n\r\n    const fetchRestaurants = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:300/restaurant/restaurants/${userId}`);\r\n            setRestaurants(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching restaurants:', error);\r\n        }\r\n    };\r\n\r\n    const fetchCategories = async (restaurantId) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:300/categories/foodCategoryByRestaurantId/${restaurantId}`);\r\n            setCategories(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching categories:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddCategory = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:300/categories/addFoodCategory', {\r\n                restaurantId: selectedRestaurantId,\r\n                foodCategoryName: newCategory\r\n            });\r\n            setCategories([...categories, response.data]);\r\n            setNewCategory(''); // Clear the input field\r\n        } catch (error) {\r\n            console.error('Error adding category:', error);\r\n        }\r\n    };\r\n\r\n    const handleUpdateCategory = async (id, updatedCategory) => {\r\n        try {\r\n            const response = await axios.put(`http://localhost:300/categories/foodCategoryByFoodCategoryId/${id}`, updatedCategory);\r\n            const updatedCategories = categories.map((category) =>\r\n                category.foodCategoryId === id ? response.data : category\r\n            );\r\n            setCategories(updatedCategories);\r\n        } catch (error) {\r\n            console.error('Error updating category:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"view-all-categories-container\">\r\n            <h2>Food Categories</h2>\r\n\r\n            <div className=\"restaurant-dropdown\">\r\n                <label>Select Restaurant: </label>\r\n                <select\r\n                    value={selectedRestaurantId || ''}\r\n                    onChange={(e) => setSelectedRestaurantId(e.target.value)}\r\n                >\r\n                    <option value=\"\" disabled>Select a restaurant</option>\r\n                    {restaurants.map((restaurant) => (\r\n                        <option key={restaurant.restaurantId} value={restaurant.restaurantId}>\r\n                            {restaurant.restaurantName}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {selectedRestaurantId && (\r\n                <>\r\n                    <div className=\"add-category\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newCategory}\r\n                            onChange={(e) => setNewCategory(e.target.value)}\r\n                            placeholder=\"Add New Category\"\r\n                        />\r\n                        <button onClick={handleAddCategory}>Add Category</button>\r\n                    </div>\r\n                    <div className=\"categories-list\">\r\n                        {categories.map((category) => (\r\n                            <div key={category.foodCategoryId} className=\"category-card\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={category.foodCategoryName}\r\n                                    onChange={(e) =>\r\n                                        handleUpdateCategory(category.foodCategoryId, {\r\n                                            ...category,\r\n                                            foodCategoryName: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewAllCategories;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}